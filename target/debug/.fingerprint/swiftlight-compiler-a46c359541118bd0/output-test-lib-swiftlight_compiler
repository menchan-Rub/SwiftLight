{"$message_type":"diagnostic","message":"found a documentation comment that doesn't document anything","code":{"code":"E0584","explanation":"A doc comment that is not attached to anything has been encountered.\n\nErroneous code example:\n\n```compile_fail,E0584\ntrait Island {\n    fn lost();\n\n    /// I'm lost!\n}\n```\n\nA little reminder: a doc comment has to be placed before the item it's supposed\nto document. So if you want to document the `Island` trait, you need to put a\ndoc comment before it, not inside it. Same goes for the `lost` method: the doc\ncomment needs to be before it:\n\n```\n/// I'm THE island!\ntrait Island {\n    /// I'm lost!\n    fn lost();\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/optimization.rs","byte_start":3789,"byte_end":3874,"line_start":150,"line_end":150,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    /// 実行メソッド（パスの種類によって具体的な実装が異なる）","highlight_start":5,"highlight_end":36}],"label":"this doc comment doesn't document anything","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"doc comments must come before what they document, if a comment was intended use `//`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0584]\u001b[0m\u001b[0m\u001b[1m: found a documentation comment that doesn't document anything\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/optimization.rs:150:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// 実行メソッド（パスの種類によって具体的な実装が異なる）\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis doc comment doesn't document anything\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: doc comments must come before what they document, if a comment was intended use `//`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the name `transforms` is defined multiple times","code":{"code":"E0428","explanation":"A type or module has been defined more than once.\n\nErroneous code example:\n\n```compile_fail,E0428\nstruct Bar;\nstruct Bar; // error: duplicate definition of value `Bar`\n```\n\nPlease verify you didn't misspell the type/module's name or remove/rename the\nduplicated one. Example:\n\n```\nstruct Bar;\nstruct Bar2; // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7385,"byte_end":7403,"line_start":218,"line_end":218,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub mod transforms {","highlight_start":1,"highlight_end":19}],"label":"`transforms` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":333,"byte_end":352,"line_start":10,"line_end":10,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub mod transforms;","highlight_start":1,"highlight_end":20}],"label":"previous definition of the module `transforms` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`transforms` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0428]\u001b[0m\u001b[0m\u001b[1m: the name `transforms` is defined multiple times\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod transforms;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious definition of the module `transforms` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod transforms {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`transforms` redefined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `transforms` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the name `detect_loops` is defined multiple times","code":{"code":"E0428","explanation":"A type or module has been defined more than once.\n\nErroneous code example:\n\n```compile_fail,E0428\nstruct Bar;\nstruct Bar; // error: duplicate definition of value `Bar`\n```\n\nPlease verify you didn't misspell the type/module's name or remove/rename the\nduplicated one. Example:\n\n```\nstruct Bar;\nstruct Bar2; // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":66447,"byte_end":66531,"line_start":1670,"line_end":1670,"column_start":5,"column_end":89,"is_primary":true,"text":[{"text":"    fn detect_loops(&mut self, func_id: usize, func: &Function) -> Result<Vec<LoopInfo>> {","highlight_start":5,"highlight_end":89}],"label":"`detect_loops` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":43029,"byte_end":43092,"line_start":1072,"line_end":1072,"column_start":5,"column_end":68,"is_primary":false,"text":[{"text":"    fn detect_loops(&self, cfg: &ControlFlowGraph) -> Vec<LoopInfo> {","highlight_start":5,"highlight_end":68}],"label":"previous definition of the value `detect_loops` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`detect_loops` must be defined only once in the value namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0428]\u001b[0m\u001b[0m\u001b[1m: the name `detect_loops` is defined multiple times\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1670:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1072\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn detect_loops(&self, cfg: &ControlFlowGraph) -> Vec<LoopInfo> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious definition of the value `detect_loops` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1670\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn detect_loops(&mut self, func_id: usize, func: &Function) -> Result<Vec<LoopInfo>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`detect_loops` redefined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `detect_loops` must be defined only once in the value namespace of this module\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the name `ast` is defined multiple times","code":{"code":"E0255","explanation":"You can't import a value whose name is the same as another value defined in the\nmodule.\n\nErroneous code example:\n\n```compile_fail,E0255\nuse bar::foo; // error: an item named `foo` is already in scope\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse bar::foo as bar_foo; // ok!\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nOr you can reference the item with its parent:\n\n```\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {\n    bar::foo(); // we get the item by referring to its parent\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":767,"byte_end":779,"line_start":24,"line_end":24,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"pub mod ast;","highlight_start":1,"highlight_end":13}],"label":"`ast` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":325,"byte_end":329,"line_start":11,"line_end":11,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,","highlight_start":5,"highlight_end":9}],"label":"previous import of the module `ast` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`ast` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can use `as` to change the binding name of the import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":325,"byte_end":329,"line_start":11,"line_end":11,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"self as other_ast","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0255]\u001b[0m\u001b[0m\u001b[1m: the name `ast` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:24:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the module `ast` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod ast;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`ast` redefined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `ast` must be defined only once in the type namespace of this module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can use `as` to change the binding name of the import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mself as other_ast\u001b[0m\u001b[0m, BinaryOperator, EnumVariant, Expression, ExpressionKind,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the name `TypeCheckResult` is defined multiple times","code":{"code":"E0252","explanation":"Two items of the same name cannot be imported without rebinding one of the\nitems under a new local name.\n\nErroneous code example:\n\n```compile_fail,E0252\nuse foo::baz;\nuse bar::baz; // error, do `use bar::baz as quux` instead\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse foo::baz as foo_baz;\nuse bar::baz; // ok!\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nOr you can reference the item with its parent:\n\n```\nuse bar::baz;\n\nfn main() {\n    let x = foo::baz; // ok!\n}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1403,"byte_end":1439,"line_start":30,"line_end":30,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use super::type_checker::TypeCheckResult;","highlight_start":5,"highlight_end":41}],"label":"`TypeCheckResult` reimported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1355,"byte_end":1370,"line_start":29,"line_end":29,"column_start":27,"column_end":42,"is_primary":false,"text":[{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":27,"highlight_end":42}],"label":"previous import of the type `TypeCheckResult` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`TypeCheckResult` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove unnecessary import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1399,"byte_end":1441,"line_start":30,"line_end":31,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::type_checker::TypeCheckResult;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0252]\u001b[0m\u001b[0m\u001b[1m: the name `TypeCheckResult` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::type_checker::{TypeCheckResult, Type, Environment, Value};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the type `TypeCheckResult` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::type_checker::TypeCheckResult;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`TypeCheckResult` reimported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `TypeCheckResult` must be defined only once in the type namespace of this module\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the name `Function` is defined multiple times","code":{"code":"E0252","explanation":"Two items of the same name cannot be imported without rebinding one of the\nitems under a new local name.\n\nErroneous code example:\n\n```compile_fail,E0252\nuse foo::baz;\nuse bar::baz; // error, do `use bar::baz as quux` instead\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse foo::baz as foo_baz;\nuse bar::baz; // ok!\n\nfn main() {}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n\nOr you can reference the item with its parent:\n\n```\nuse bar::baz;\n\nfn main() {\n    let x = foo::baz; // ok!\n}\n\nmod foo {\n    pub struct baz;\n}\n\nmod bar {\n    pub mod baz {}\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":1316,"byte_end":1324,"line_start":28,"line_end":28,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"pub use representation::{Module, Function, BasicBlock, Instruction, Value, Type, Operand, OpCode};","highlight_start":34,"highlight_end":42}],"label":"`Function` reimported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":false,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":"previous import of the type `Function` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Function` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can use `as` to change the binding name of the import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":1324,"byte_end":1324,"line_start":28,"line_end":28,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"pub use representation::{Module, Function, BasicBlock, Instruction, Value, Type, Operand, OpCode};","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":" as OtherFunction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0252]\u001b[0m\u001b[0m\u001b[1m: the name `Function` is defined multiple times\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:28:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the type `Function` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use representation::{Module, Function, BasicBlock, Instruction, Value, Type, Operand, OpCode};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Function` reimported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Function` must be defined only once in the type namespace of this module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can use `as` to change the binding name of the import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub use representation::{Module, Function\u001b[0m\u001b[0m\u001b[38;5;10m as OtherFunction\u001b[0m\u001b[0m, BasicBlock, Instruction, Value, Type, Operand, OpCode};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the name `Type` is defined multiple times","code":{"code":"E0255","explanation":"You can't import a value whose name is the same as another value defined in the\nmodule.\n\nErroneous code example:\n\n```compile_fail,E0255\nuse bar::foo; // error: an item named `foo` is already in scope\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nYou can use aliases in order to fix this error. Example:\n\n```\nuse bar::foo as bar_foo; // ok!\n\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {}\n```\n\nOr you can reference the item with its parent:\n\n```\nfn foo() {}\n\nmod bar {\n     pub fn foo() {}\n}\n\nfn main() {\n    bar::foo(); // we get the item by referring to its parent\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8927,"byte_end":8940,"line_start":314,"line_end":314,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"pub enum Type {","highlight_start":1,"highlight_end":14}],"label":"`Type` redefined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1317,"byte_end":1321,"line_start":46,"line_end":46,"column_start":23,"column_end":27,"is_primary":false,"text":[{"text":"pub use self::types::{Type, TypeId, TypeRegistry};","highlight_start":23,"highlight_end":27}],"label":"previous import of the type `Type` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Type` must be defined only once in the type namespace of this module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can use `as` to change the binding name of the import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1321,"byte_end":1321,"line_start":46,"line_end":46,"column_start":27,"column_end":27,"is_primary":true,"text":[{"text":"pub use self::types::{Type, TypeId, TypeRegistry};","highlight_start":27,"highlight_end":27}],"label":null,"suggested_replacement":" as OtherType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0255]\u001b[0m\u001b[0m\u001b[1m: the name `Type` is defined multiple times\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:314:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::{Type, TypeId, TypeRegistry};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mprevious import of the type `Type` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Type {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`Type` redefined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Type` must be defined only once in the type namespace of this module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can use `as` to change the binding name of the import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub use self::types::{Type\u001b[0m\u001b[0m\u001b[38;5;10m as OtherType\u001b[0m\u001b[0m, TypeId, TypeRegistry};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":234819,"byte_end":234828,"line_start":5400,"line_end":5400,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"fn evaluate_constexpr(&mut self, expr: &Expression) -> Result<BasicValueEnum<'ctx>> {","highlight_start":23,"highlight_end":32}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:5400:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn evaluate_constexpr(&mut self, expr: &Expression) -> Result<BasicValueEnum<'ctx>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":250474,"byte_end":250479,"line_start":5721,"line_end":5721,"column_start":26,"column_end":31,"is_primary":true,"text":[{"text":"fn lookup_constant_value(&self, name: &str) -> Option<BasicValueEnum<'ctx>> {","highlight_start":26,"highlight_end":31}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:5721:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5721\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn lookup_constant_value(&self, name: &str) -> Option<BasicValueEnum<'ctx>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":250899,"byte_end":250908,"line_start":5734,"line_end":5734,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"fn generate_global_constant(&mut self, constant: &ConstantDeclaration, decl: &Declaration) -> Result<()> {","highlight_start":29,"highlight_end":38}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:5734:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5734\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn generate_global_constant(&mut self, constant: &ConstantDeclaration, decl: &Declaration) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":36297,"byte_end":36306,"line_start":929,"line_end":929,"column_start":43,"column_end":52,"is_primary":true,"text":[{"text":"    fn register_component_model_interface(&mut self, func_id: usize, func: &Function) -> Result<()> {","highlight_start":43,"highlight_end":52}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:929:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m929\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn register_component_model_interface(&mut self, func_id: usize, func: &Function) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":37142,"byte_end":37151,"line_start":948,"line_end":948,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    fn analyze_hot_paths(&mut self, func_id: usize, func: &Function) -> Result<()> {","highlight_start":26,"highlight_end":35}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:948:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m948\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn analyze_hot_paths(&mut self, func_id: usize, func: &Function) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":41452,"byte_end":41457,"line_start":1033,"line_end":1033,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"    fn build_control_flow_graph(&self, func: &Function) -> Result<ControlFlowGraph> {","highlight_start":33,"highlight_end":38}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1033:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn build_control_flow_graph(&self, func: &Function) -> Result<ControlFlowGraph> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":43045,"byte_end":43050,"line_start":1072,"line_end":1072,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"    fn detect_loops(&self, cfg: &ControlFlowGraph) -> Vec<LoopInfo> {","highlight_start":21,"highlight_end":26}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1072:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1072\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn detect_loops(&self, cfg: &ControlFlowGraph) -> Vec<LoopInfo> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":46987,"byte_end":46992,"line_start":1166,"line_end":1166,"column_start":38,"column_end":43,"is_primary":true,"text":[{"text":"    fn estimate_branch_probabilities(&self, block_id: usize, cfg: &ControlFlowGraph) -> (f64, f64) {","highlight_start":38,"highlight_end":43}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1166:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn estimate_branch_probabilities(&self, block_id: usize, cfg: &ControlFlowGraph) -> (f64, f64) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":48767,"byte_end":48772,"line_start":1207,"line_end":1207,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"    fn is_null_check(&self, left: &Value, right: &Value) -> bool {","highlight_start":22,"highlight_end":27}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1207:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn is_null_check(&self, left: &Value, right: &Value) -> bool {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":49015,"byte_end":49020,"line_start":1215,"line_end":1215,"column_start":26,"column_end":31,"is_primary":true,"text":[{"text":"    fn is_loop_condition(&self, block_id: usize, cfg: &ControlFlowGraph) -> bool {","highlight_start":26,"highlight_end":31}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1215:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn is_loop_condition(&self, block_id: usize, cfg: &ControlFlowGraph) -> bool {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":49412,"byte_end":49421,"line_start":1227,"line_end":1227,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        &mut self, ","highlight_start":9,"highlight_end":18}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1227:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &mut self, \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":50487,"byte_end":50496,"line_start":1259,"line_end":1259,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        &mut self, ","highlight_start":9,"highlight_end":18}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1259:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &mut self, \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":52502,"byte_end":52511,"line_start":1315,"line_end":1315,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"    fn optimize_hot_block_instructions(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {","highlight_start":40,"highlight_end":49}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1315:40\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn optimize_hot_block_instructions(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":53161,"byte_end":53170,"line_start":1332,"line_end":1332,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    fn schedule_instructions(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {","highlight_start":30,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1332:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn schedule_instructions(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":54725,"byte_end":54730,"line_start":1374,"line_end":1374,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"    fn analyze_instruction_dependencies(&self, instr: &Instruction, idx: usize, block: &Block) -> HashSet<usize> {","highlight_start":41,"highlight_end":46}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1374:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn analyze_instruction_dependencies(&self, instr: &Instruction, idx: usize, block: &Block) -> HashSet<usize> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":55936,"byte_end":55941,"line_start":1407,"line_end":1407,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"    fn get_instruction_reads(&self, instr: &Instruction) -> HashSet<usize> {","highlight_start":30,"highlight_end":35}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1407:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_instruction_reads(&self, instr: &Instruction) -> HashSet<usize> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":57079,"byte_end":57084,"line_start":1440,"line_end":1440,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"    fn get_instruction_writes(&self, instr: &Instruction) -> HashSet<usize> {","highlight_start":31,"highlight_end":36}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1440:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1440\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_instruction_writes(&self, instr: &Instruction) -> HashSet<usize> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":57627,"byte_end":57636,"line_start":1458,"line_end":1458,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"    fn vectorize_instructions(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {","highlight_start":31,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1458:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn vectorize_instructions(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":58554,"byte_end":58559,"line_start":1482,"line_end":1482,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"    fn detect_vectorizable_group(&self, instructions: &[Instruction]) -> Option<usize> {","highlight_start":34,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1482:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn detect_vectorizable_group(&self, instructions: &[Instruction]) -> Option<usize> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":59484,"byte_end":59493,"line_start":1512,"line_end":1512,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"    fn optimize_memory_access(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {","highlight_start":31,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1512:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn optimize_memory_access(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":61348,"byte_end":61353,"line_start":1554,"line_end":1554,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"    fn is_modified_between(&self, start: usize, end: usize, var_id: usize, block: &Block) -> bool {","highlight_start":28,"highlight_end":33}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1554:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn is_modified_between(&self, start: usize, end: usize, var_id: usize, block: &Block) -> bool {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":61723,"byte_end":61732,"line_start":1565,"line_end":1565,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"    fn apply_constant_folding(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {","highlight_start":31,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1565:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1565\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn apply_constant_folding(&mut self, func_id: usize, block_id: usize, block: &Block) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":64426,"byte_end":64435,"line_start":1623,"line_end":1623,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"    fn insert_branch_prediction_hint(&mut self, func_id: usize, from_block: usize, to_block: usize) -> Result<()> {","highlight_start":38,"highlight_end":47}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1623:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1623\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn insert_branch_prediction_hint(&mut self, func_id: usize, from_block: usize, to_block: usize) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":64791,"byte_end":64800,"line_start":1633,"line_end":1633,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"    fn apply_loop_unrolling(&mut self, func_id: usize, func: &Function, hot_blocks: &HashSet<usize>) -> Result<()> {","highlight_start":29,"highlight_end":38}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1633:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1633\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn apply_loop_unrolling(&mut self, func_id: usize, func: &Function, hot_blocks: &HashSet<usize>) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":66463,"byte_end":66472,"line_start":1670,"line_end":1670,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"    fn detect_loops(&mut self, func_id: usize, func: &Function) -> Result<Vec<LoopInfo>> {","highlight_start":21,"highlight_end":30}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1670:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1670\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn detect_loops(&mut self, func_id: usize, func: &Function) -> Result<Vec<LoopInfo>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":71062,"byte_end":71067,"line_start":1781,"line_end":1781,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"    fn evaluate_loop_complexity(&self, func_id: usize, func: &Function, body_blocks: &HashSet<usize>) -> Result<usize> {","highlight_start":33,"highlight_end":38}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1781:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1781\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn evaluate_loop_complexity(&self, func_id: usize, func: &Function, body_blocks: &HashSet<usize>) -> Result<usize> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":72196,"byte_end":72201,"line_start":1812,"line_end":1812,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"    fn analyze_static_trip_count(&self, func_id: usize, func: &Function, loop_info: &LoopInfo) -> Result<Option<usize>> {","highlight_start":34,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1812:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1812\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn analyze_static_trip_count(&self, func_id: usize, func: &Function, loop_info: &LoopInfo) -> Result<Option<usize>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":75260,"byte_end":75265,"line_start":1865,"line_end":1865,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"    fn determine_unroll_factor(&self, trip_count: usize, complexity: usize) -> usize {","highlight_start":32,"highlight_end":37}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1865:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn determine_unroll_factor(&self, trip_count: usize, complexity: usize) -> usize {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":75863,"byte_end":75872,"line_start":1883,"line_end":1883,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"    fn perform_loop_unrolling(&mut self, func_id: usize, func: &Function, loop_info: &LoopInfo, unroll_factor: usize) -> Result<()> {","highlight_start":31,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1883:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1883\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn perform_loop_unrolling(&mut self, func_id: usize, func: &Function, loop_info: &LoopInfo, unroll_factor: usize) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":76391,"byte_end":76396,"line_start":1894,"line_end":1894,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"    fn identify_loop_exits(&self, func: &Function, loop_info: &mut LoopInfo) -> Result<()> {","highlight_start":28,"highlight_end":33}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1894:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1894\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn identify_loop_exits(&self, func: &Function, loop_info: &mut LoopInfo) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":77070,"byte_end":77075,"line_start":1913,"line_end":1913,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"    fn create_loop_preheader(&self, func_id: usize, func: &Function, loop_info: &mut LoopInfo) -> Result<()> {","highlight_start":30,"highlight_end":35}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1913:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1913\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn create_loop_preheader(&self, func_id: usize, func: &Function, loop_info: &mut LoopInfo) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":78025,"byte_end":78030,"line_start":1936,"line_end":1936,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"    fn find_induction_variable_increment(&self, func: &Function, loop_info: &LoopInfo, var: &str) -> Option<i64> {","highlight_start":42,"highlight_end":47}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1936:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1936\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn find_induction_variable_increment(&self, func: &Function, loop_info: &LoopInfo, var: &str) -> Option<i64> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":79638,"byte_end":79643,"line_start":1973,"line_end":1973,"column_start":46,"column_end":51,"is_primary":true,"text":[{"text":"    fn find_induction_variable_initial_value(&self, func: &Function, loop_info: &LoopInfo, var: &str) -> Option<i64> {","highlight_start":46,"highlight_end":51}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:1973:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1973\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn find_induction_variable_initial_value(&self, func: &Function, loop_info: &LoopInfo, var: &str) -> Option<i64> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":81036,"byte_end":81041,"line_start":2011,"line_end":2011,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"    fn calculate_trip_count(&self, op: BinaryOp, initial: i64, limit: i64, increment: i64) -> Result<Option<usize>> {","highlight_start":29,"highlight_end":34}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2011:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2011\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn calculate_trip_count(&self, op: BinaryOp, initial: i64, limit: i64, increment: i64) -> Result<Option<usize>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":83463,"byte_end":83472,"line_start":2081,"line_end":2081,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"    fn finalize_module(&mut self) -> Result<Vec<u8>> {","highlight_start":24,"highlight_end":33}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2081:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2081\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn finalize_module(&mut self) -> Result<Vec<u8>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":95333,"byte_end":95342,"line_start":2360,"line_end":2360,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"    fn encode_type_section(&mut self) -> Result<()> {","highlight_start":28,"highlight_end":37}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2360:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_type_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":96582,"byte_end":96591,"line_start":2391,"line_end":2391,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    fn encode_import_section(&mut self) -> Result<()> {","highlight_start":30,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2391:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_import_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":99838,"byte_end":99847,"line_start":2462,"line_end":2462,"column_start":32,"column_end":41,"is_primary":true,"text":[{"text":"    fn encode_function_section(&mut self) -> Result<()> {","highlight_start":32,"highlight_end":41}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2462:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2462\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_function_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":100567,"byte_end":100576,"line_start":2483,"line_end":2483,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"    fn encode_table_section(&mut self) -> Result<()> {","highlight_start":29,"highlight_end":38}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2483:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2483\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_table_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":101555,"byte_end":101564,"line_start":2506,"line_end":2506,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    fn encode_memory_section(&mut self) -> Result<()> {","highlight_start":30,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2506:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2506\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_memory_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":102081,"byte_end":102090,"line_start":2523,"line_end":2523,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    fn encode_global_section(&mut self) -> Result<()> {","highlight_start":30,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2523:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2523\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_global_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":104805,"byte_end":104814,"line_start":2593,"line_end":2593,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    fn encode_export_section(&mut self) -> Result<()> {","highlight_start":30,"highlight_end":39}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2593:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_export_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":106099,"byte_end":106108,"line_start":2625,"line_end":2625,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"    fn encode_element_section(&mut self) -> Result<()> {","highlight_start":31,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2625:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2625\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_element_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":107239,"byte_end":107248,"line_start":2659,"line_end":2659,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"    fn encode_data_section(&mut self) -> Result<()> {","highlight_start":28,"highlight_end":37}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2659:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2659\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_data_section(&mut self) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":108497,"byte_end":108506,"line_start":2696,"line_end":2696,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"    fn encode_section(&mut self, section_id: u8, section_data: &[u8]) -> Result<()> {","highlight_start":23,"highlight_end":32}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2696:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_section(&mut self, section_id: u8, section_data: &[u8]) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":109174,"byte_end":109179,"line_start":2714,"line_end":2714,"column_start":26,"column_end":31,"is_primary":true,"text":[{"text":"    fn wasm_type_to_byte(&self, wasm_type: &WasmType) -> u8 {","highlight_start":26,"highlight_end":31}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2714:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2714\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn wasm_type_to_byte(&self, wasm_type: &WasmType) -> u8 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":109572,"byte_end":109577,"line_start":2725,"line_end":2725,"column_start":35,"column_end":40,"is_primary":true,"text":[{"text":"    fn encode_constant_expression(&self, value_id: ValueId, output: &mut Vec<u8>) -> Result<()> {","highlight_start":35,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2725:35\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2725\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_constant_expression(&self, value_id: ValueId, output: &mut Vec<u8>) -> Result<()> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":111660,"byte_end":111665,"line_start":2773,"line_end":2773,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"    fn encode_string(&self, s: &str, output: &mut Vec<u8>) {","highlight_start":22,"highlight_end":27}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2773:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2773\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_string(&self, s: &str, output: &mut Vec<u8>) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":111919,"byte_end":111924,"line_start":2780,"line_end":2780,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"    fn encode_unsigned_leb128(&self, value: u32, output: &mut Vec<u8>) {","highlight_start":31,"highlight_end":36}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2780:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2780\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_unsigned_leb128(&self, value: u32, output: &mut Vec<u8>) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":112394,"byte_end":112399,"line_start":2796,"line_end":2796,"column_start":35,"column_end":40,"is_primary":true,"text":[{"text":"    fn encode_unsigned_leb128_vec(&self, value: u32) -> Vec<u8> {","highlight_start":35,"highlight_end":40}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:2796:35\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2796\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn encode_unsigned_leb128_vec(&self, value: u32) -> Vec<u8> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":26631,"byte_end":26636,"line_start":714,"line_end":714,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn vectorize(&self, module: &mut Module) -> Result<usize> {","highlight_start":22,"highlight_end":27}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:714:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m714\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn vectorize(&self, module: &mut Module) -> Result<usize> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":27376,"byte_end":27381,"line_start":737,"line_end":737,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"    fn vectorize_loop(&self, _module: &mut Module, _loop_id: &str) -> Result<bool> {","highlight_start":23,"highlight_end":28}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:737:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m737\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn vectorize_loop(&self, _module: &mut Module, _loop_id: &str) -> Result<bool> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`self` parameter is only allowed in associated functions","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":27643,"byte_end":27648,"line_start":744,"line_end":744,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"    fn vectorize_function(&self, _module: &mut Module, _function_id: &str) -> Result<bool> {","highlight_start":27,"highlight_end":32}],"label":"not semantically valid as function parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated functions are those in `impl` or `trait` definitions","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `self` parameter is only allowed in associated functions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:744:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m744\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn vectorize_function(&self, _module: &mut Module, _function_id: &str) -> Result<bool> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot semantically valid as function parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: associated functions are those in `impl` or `trait` definitions\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::semantic::error`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs","byte_start":80,"byte_end":85,"line_start":2,"line_end":2,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::error::SemanticError;","highlight_start":32,"highlight_end":37}],"label":"could not find `error` in `semantic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::semantic::error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs:2:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::semantic::error::SemanticError;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `error` in `semantic`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::semantic::module`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs","byte_start":191,"byte_end":197,"line_start":4,"line_end":4,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::module::Module;","highlight_start":32,"highlight_end":38}],"label":"could not find `module` in `semantic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::semantic::module`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs:4:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::semantic::module::Module;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `module` in `semantic`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::semantic::type_annotation`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs","byte_start":238,"byte_end":253,"line_start":5,"line_end":5,"column_start":32,"column_end":47,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::type_annotation::TypeAnnotation;","highlight_start":32,"highlight_end":47}],"label":"could not find `type_annotation` in `semantic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::semantic::type_annotation`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs:5:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::semantic::type_annotation::TypeAnnotation;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `type_annotation` in `semantic`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::utils::span`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/hir.rs","byte_start":18,"byte_end":22,"line_start":1,"line_end":1,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"use crate::utils::span::Span;","highlight_start":19,"highlight_end":23}],"label":"could not find `span` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::utils::span`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/hir.rs:1:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::utils::span::Span;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `span` in `utils`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `self::lexer::TokenStream`, `self::parser::SyntaxTree`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1534,"byte_end":1545,"line_start":47,"line_end":47,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    lexer::{Lexer, TokenStream},","highlight_start":20,"highlight_end":31}],"label":"no `TokenStream` in `frontend::lexer`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1569,"byte_end":1579,"line_start":48,"line_end":48,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"    parser::{Parser, SyntaxTree},","highlight_start":22,"highlight_end":32}],"label":"no `SyntaxTree` in `frontend::parser`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `self::lexer::TokenStream`, `self::parser::SyntaxTree`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/mod.rs:47:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    lexer::{Lexer, TokenStream},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TokenStream` in `frontend::lexer`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parser::{Parser, SyntaxTree},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `SyntaxTree` in `frontend::parser`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::middleend::ir::ValueId`, `crate::middleend::ir::TypeId`, `crate::middleend::ir::ControlFlowGraph`, `crate::middleend::ir::InstructionId`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":586,"byte_end":593,"line_start":15,"line_end":15,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":55,"highlight_end":62}],"label":"no `ValueId` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":606,"byte_end":612,"line_start":16,"line_end":16,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":11,"highlight_end":17}],"label":"no `TypeId` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":614,"byte_end":630,"line_start":16,"line_end":16,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":19,"highlight_end":35}],"label":"no `ControlFlowGraph` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":632,"byte_end":645,"line_start":16,"line_end":16,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":37,"highlight_end":50}],"label":"no `InstructionId` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"type alias `crate::backend::native::x86_64::ValueId` exists but is inaccessible","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86_64.rs","byte_start":956,"byte_end":977,"line_start":20,"line_end":20,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"type ValueId = usize;","highlight_start":1,"highlight_end":22}],"label":"not accessible","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider importing one of these items instead:\ncrate::TypeId\ncrate::backend::debug::TypeId\nstd::any::TypeId","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":586,"byte_end":593,"line_start":15,"line_end":15,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":"Value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":606,"byte_end":612,"line_start":16,"line_end":16,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"Type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":632,"byte_end":645,"line_start":16,"line_end":16,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":37,"highlight_end":50}],"label":null,"suggested_replacement":"Instruction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::middleend::ir::ValueId`, `crate::middleend::ir::TypeId`, `crate::middleend::ir::ControlFlowGraph`, `crate::middleend::ir::InstructionId`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/dataflow.rs:15:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    BasicBlock, Function, Instruction, Module, Value, ValueId, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ValueId` in `middleend::ir`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Type, TypeId, ControlFlowGraph, InstructionId\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `InstructionId` in `middleend::ir`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ControlFlowGraph` in `middleend::ir`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TypeId` in `middleend::ir`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: type alias `crate::backend::native::x86_64::ValueId` exists but is inaccessible\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86_64.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ValueId = usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mnot accessible\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m           crate::TypeId\u001b[0m\n\u001b[0m           crate::backend::debug::TypeId\u001b[0m\n\u001b[0m           std::any::TypeId\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    BasicBlock, Function, Instruction, Module, Value, \u001b[0m\u001b[0m\u001b[38;5;10mValue\u001b[0m\u001b[0m, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Type, \u001b[0m\u001b[0m\u001b[38;5;10mType\u001b[0m\u001b[0m, ControlFlowGraph, InstructionId\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Type, TypeId, ControlFlowGraph, \u001b[0m\u001b[0m\u001b[38;5;10mInstruction\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::middleend::ir::BinaryOp`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7533,"byte_end":7541,"line_start":220,"line_end":220,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};","highlight_start":88,"highlight_end":96}],"label":"no `BinaryOp` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this variant instead:\ncrate::frontend::hir::Expression::BinaryOp","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::middleend::ir::BinaryOp`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:220:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `BinaryOp` in `middleend::ir`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this variant instead:\u001b[0m\n\u001b[0m            crate::frontend::hir::Expression::BinaryOp\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::middleend::ir::ControlFlow`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":487,"byte_end":498,"line_start":10,"line_end":10,"column_start":84,"column_end":95,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":84,"highlight_end":95}],"label":"no `ControlFlow` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items instead:\ncrate::backend::analysis::AnalysisKind::ControlFlow\nstd::ops::ControlFlow","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::middleend::ir::ControlFlow`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:10:84\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ControlFlow` in `middleend::ir`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m           crate::backend::analysis::AnalysisKind::ControlFlow\u001b[0m\n\u001b[0m           std::ops::ControlFlow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::middleend::analysis::ControlFlowGraph`, `crate::middleend::analysis::DominatorTree`, `crate::middleend::analysis::CallGraph`, `crate::middleend::analysis::AliasAnalysis`, `crate::middleend::analysis::LoopAnalysis`, `crate::middleend::analysis::DependenceAnalysis`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":539,"byte_end":555,"line_start":12,"line_end":12,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    ControlFlowGraph, ","highlight_start":5,"highlight_end":21}],"label":"no `ControlFlowGraph` in `middleend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":562,"byte_end":575,"line_start":13,"line_end":13,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    DominatorTree, ","highlight_start":5,"highlight_end":18}],"label":"no `DominatorTree` in `middleend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":582,"byte_end":591,"line_start":14,"line_end":14,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    CallGraph, ","highlight_start":5,"highlight_end":14}],"label":"no `CallGraph` in `middleend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":621,"byte_end":634,"line_start":16,"line_end":16,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    AliasAnalysis,","highlight_start":5,"highlight_end":18}],"label":"no `AliasAnalysis` in `middleend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":640,"byte_end":652,"line_start":17,"line_end":17,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    LoopAnalysis,","highlight_start":5,"highlight_end":17}],"label":"no `LoopAnalysis` in `middleend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":658,"byte_end":676,"line_start":18,"line_end":18,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    DependenceAnalysis","highlight_start":5,"highlight_end":23}],"label":"no `DependenceAnalysis` in `middleend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"unresolved item `crate::middleend::analysis::dataflow::tests::ControlFlowGraph` exists but is inaccessible","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider importing this struct instead:\ncrate::backend::analysis::AliasAnalysis","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":640,"byte_end":652,"line_start":17,"line_end":17,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    LoopAnalysis,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"CFGAnalysis","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::middleend::analysis::ControlFlowGraph`, `crate::middleend::analysis::DominatorTree`, `crate::middleend::analysis::CallGraph`, `crate::middleend::analysis::AliasAnalysis`, `crate::middleend::analysis::LoopAnalysis`, `crate::middleend::analysis::DependenceAnalysis`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ControlFlowGraph, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ControlFlowGraph` in `middleend::analysis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DominatorTree, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `DominatorTree` in `middleend::analysis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CallGraph, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CallGraph` in `middleend::analysis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DataFlowAnalysis, \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AliasAnalysis,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `AliasAnalysis` in `middleend::analysis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LoopAnalysis,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoopAnalysis` in `middleend::analysis`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `CFGAnalysis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DependenceAnalysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `DependenceAnalysis` in `middleend::analysis`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: unresolved item `crate::middleend::analysis::dataflow::tests::ControlFlowGraph` exists but is inaccessible\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           crate::backend::analysis::AliasAnalysis\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::utils::profiler`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":761,"byte_end":769,"line_start":21,"line_end":21,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"use crate::utils::profiler::{Profiler, OptimizationMetrics};","highlight_start":19,"highlight_end":27}],"label":"could not find `profiler` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::utils::profiler`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:21:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::utils::profiler::{Profiler, OptimizationMetrics};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `profiler` in `utils`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::middleend::ir::Loop`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":439,"byte_end":443,"line_start":10,"line_end":10,"column_start":84,"column_end":88,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};","highlight_start":84,"highlight_end":88}],"label":"no `Loop` in `middleend::ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these variants instead:\ncrate::backend::analysis::AnalysisKind::Loop\ncrate::backend::debug::ScopeKind::Loop\ncrate::backend::vectorization::VectorizationCandidateKind::Loop\ncrate::frontend::hir::ControlStructure::Loop\ncrate::frontend::semantic::ScopeKind::Loop","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::middleend::ir::Loop`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:10:84\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Loop` in `middleend::ir`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these variants instead:\u001b[0m\n\u001b[0m           crate::backend::analysis::AnalysisKind::Loop\u001b[0m\n\u001b[0m           crate::backend::debug::ScopeKind::Loop\u001b[0m\n\u001b[0m           crate::backend::vectorization::VectorizationCandidateKind::Loop\u001b[0m\n\u001b[0m           crate::frontend::hir::ControlStructure::Loop\u001b[0m\n\u001b[0m           crate::frontend::semantic::ScopeKind::Loop\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::middleend::ir::analysis`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":472,"byte_end":480,"line_start":11,"line_end":11,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"use crate::middleend::ir::analysis::{LoopInfo, DependenceAnalysis, AliasAnalysis};","highlight_start":27,"highlight_end":35}],"label":"could not find `analysis` in `ir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::middleend::ir::analysis`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:11:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::analysis::{LoopInfo, DependenceAnalysis, AliasAnalysis};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `analysis` in `ir`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::utils::logger`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":780,"byte_end":786,"line_start":16,"line_end":16,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use crate::utils::logger::{Logger, LogLevel};","highlight_start":19,"highlight_end":25}],"label":"could not find `logger` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::utils::logger`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:16:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::utils::logger::{Logger, LogLevel};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `logger` in `utils`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::utils::profiler`, `crate::utils::file_system`, `crate::utils::parallel`, `crate::utils::memory_tracker`, `crate::utils::hash`, `crate::utils::logging`, `crate::utils::error_formatter`, `crate::utils::string_interner`, `crate::utils::arena`, `crate::utils::config_parser`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2473,"byte_end":2481,"line_start":65,"line_end":65,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    profiler::{Profiler, ProfilingEvent, ProfilingScope},","highlight_start":5,"highlight_end":13}],"label":"could not find `profiler` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2531,"byte_end":2542,"line_start":66,"line_end":66,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    file_system::{FileSystem, VirtualFileSystem, FileWatcher, FileChangeEvent},","highlight_start":5,"highlight_end":16}],"label":"could not find `file_system` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2611,"byte_end":2619,"line_start":67,"line_end":67,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    parallel::{WorkQueue, Task, TaskPriority, ThreadPool},","highlight_start":5,"highlight_end":13}],"label":"could not find `parallel` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2670,"byte_end":2684,"line_start":68,"line_end":68,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    memory_tracker::{MemoryTracker, MemoryUsageSnapshot},","highlight_start":5,"highlight_end":19}],"label":"could not find `memory_tracker` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2728,"byte_end":2732,"line_start":69,"line_end":69,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    hash::{HashAlgorithm, ContentHasher},","highlight_start":5,"highlight_end":9}],"label":"could not find `hash` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2770,"byte_end":2777,"line_start":70,"line_end":70,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    logging::{Logger, LogLevel, LogMessage},","highlight_start":5,"highlight_end":12}],"label":"could not find `logging` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2815,"byte_end":2830,"line_start":71,"line_end":71,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    error_formatter::{ErrorFormatter, FormattingOptions},","highlight_start":5,"highlight_end":20}],"label":"could not find `error_formatter` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2873,"byte_end":2888,"line_start":72,"line_end":72,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    string_interner::StringInterner,","highlight_start":5,"highlight_end":20}],"label":"could not find `string_interner` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2910,"byte_end":2915,"line_start":73,"line_end":73,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    arena::{Arena, TypedArena},","highlight_start":5,"highlight_end":10}],"label":"could not find `arena` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2942,"byte_end":2955,"line_start":74,"line_end":74,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    config_parser::ConfigParser","highlight_start":5,"highlight_end":18}],"label":"could not find `config_parser` in `utils`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::utils::profiler`, `crate::utils::file_system`, `crate::utils::parallel`, `crate::utils::memory_tracker`, `crate::utils::hash`, `crate::utils::logging`, `crate::utils::error_formatter`, `crate::utils::string_interner`, `crate::utils::arena`, `crate::utils::config_parser`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:65:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    profiler::{Profiler, ProfilingEvent, ProfilingScope},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `profiler` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    file_system::{FileSystem, VirtualFileSystem, FileWatcher, FileChangeEvent},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `file_system` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parallel::{WorkQueue, Task, TaskPriority, ThreadPool},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `parallel` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    memory_tracker::{MemoryTracker, MemoryUsageSnapshot},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `memory_tracker` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hash::{HashAlgorithm, ContentHasher},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `hash` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    logging::{Logger, LogLevel, LogMessage},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `logging` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error_formatter::{ErrorFormatter, FormattingOptions},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `error_formatter` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    string_interner::StringInterner,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `string_interner` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    arena::{Arena, TypedArena},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `arena` in `utils`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    config_parser::ConfigParser\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `config_parser` in `utils`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::frontend::semantic::OwnershipCheckLevel`, `crate::frontend::semantic::TypeCheckLevel`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":648,"byte_end":667,"line_start":13,"line_end":13,"column_start":33,"column_end":52,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::{OwnershipCheckLevel, TypeCheckLevel};","highlight_start":33,"highlight_end":52}],"label":"no `OwnershipCheckLevel` in `frontend::semantic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":669,"byte_end":683,"line_start":13,"line_end":13,"column_start":54,"column_end":68,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::{OwnershipCheckLevel, TypeCheckLevel};","highlight_start":54,"highlight_end":68}],"label":"no `TypeCheckLevel` in `frontend::semantic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::frontend::semantic::OwnershipCheckLevel`, `crate::frontend::semantic::TypeCheckLevel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/config.rs:13:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::semantic::{OwnershipCheckLevel, TypeCheckLevel};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TypeCheckLevel` in `frontend::semantic`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `OwnershipCheckLevel` in `frontend::semantic`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::ast::TraitMethod`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":497,"byte_end":508,"line_start":13,"line_end":13,"column_start":44,"column_end":55,"is_primary":true,"text":[{"text":"    Statement, StatementKind, StructField, TraitMethod, TypeAnnotation,","highlight_start":44,"highlight_end":55}],"label":"no `TraitMethod` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct instead:\ncrate::parser::ast::TraitMethod","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::ast::TraitMethod`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:13:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Statement, StatementKind, StructField, TraitMethod, TypeAnnotation,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TraitMethod` in `frontend::ast`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           crate::parser::ast::TraitMethod\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::ast::TraitMethod`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":291,"byte_end":302,"line_start":8,"line_end":8,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    StructField, TraitMethod, TypeAnnotation,","highlight_start":18,"highlight_end":29}],"label":"no `TraitMethod` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items instead:\ncrate::parser::TraitMethod\ncrate::parser::ast::TraitMethod","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::ast::TraitMethod`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/declaration.rs:8:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    StructField, TraitMethod, TypeAnnotation,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TraitMethod` in `frontend::ast`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m          crate::parser::TraitMethod\u001b[0m\n\u001b[0m          crate::parser::ast::TraitMethod\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::error::Diagnostic`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":388,"byte_end":398,"line_start":8,"line_end":8,"column_start":64,"column_end":74,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":64,"highlight_end":74}],"label":"no `Diagnostic` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead:\ncrate::Diagnostic\ncrate::diagnostics::Diagnostic\ncrate::frontend::Diagnostic\ncrate::utils::diagnostics::Diagnostic","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::error::Diagnostic`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/mod.rs:8:64\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{CompilerError, ErrorKind, Result, Diagnostic};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Diagnostic` in `frontend::error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead:\u001b[0m\n\u001b[0m          crate::Diagnostic\u001b[0m\n\u001b[0m          crate::diagnostics::Diagnostic\u001b[0m\n\u001b[0m          crate::frontend::Diagnostic\u001b[0m\n\u001b[0m          crate::utils::diagnostics::Diagnostic\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::ast::Block`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":634,"byte_end":639,"line_start":13,"line_end":13,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"    VariableDeclaration, Function, Parameter, Block","highlight_start":47,"highlight_end":52}],"label":"no `Block` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these variants instead:\ncrate::backend::debug::ScopeKind::Block\ncrate::frontend::semantic::ScopeKind::Block\ncrate::middleend::ir::Operand::Block\ncrate::parser::ast::Expression::Block","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::ast::Block`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs:13:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VariableDeclaration, Function, Parameter, Block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Block` in `frontend::ast`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these variants instead:\u001b[0m\n\u001b[0m           crate::backend::debug::ScopeKind::Block\u001b[0m\n\u001b[0m           crate::frontend::semantic::ScopeKind::Block\u001b[0m\n\u001b[0m           crate::middleend::ir::Operand::Block\u001b[0m\n\u001b[0m           crate::parser::ast::Expression::Block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::frontend::error::Diagnostic`, `crate::frontend::error::Location`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1138,"byte_end":1148,"line_start":25,"line_end":25,"column_start":64,"column_end":74,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError, ErrorKind, Diagnostic, SourceLocation, Location};","highlight_start":64,"highlight_end":74}],"label":"no `Diagnostic` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1166,"byte_end":1174,"line_start":25,"line_end":25,"column_start":92,"column_end":100,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError, ErrorKind, Diagnostic, SourceLocation, Location};","highlight_start":92,"highlight_end":100}],"label":"no `Location` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items instead:\ncrate::Diagnostic\ncrate::diagnostics::Diagnostic\ncrate::frontend::Diagnostic\ncrate::frontend::semantic::Diagnostic\ncrate::utils::diagnostics::Diagnostic","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing this struct instead:\nstd::panic::Location","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::frontend::error::Diagnostic`, `crate::frontend::error::Location`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:25:64\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompilerError, ErrorKind, Diagnostic, SourceLocation, Location};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Location` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Diagnostic` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m           crate::Diagnostic\u001b[0m\n\u001b[0m           crate::diagnostics::Diagnostic\u001b[0m\n\u001b[0m           crate::frontend::Diagnostic\u001b[0m\n\u001b[0m           crate::frontend::semantic::Diagnostic\u001b[0m\n\u001b[0m           crate::utils::diagnostics::Diagnostic\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           std::panic::Location\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `super::type_checker::Type`, `super::type_checker::Environment`, `super::type_checker::Value`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1372,"byte_end":1376,"line_start":29,"line_end":29,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":44,"highlight_end":48}],"label":"no `Type` in `frontend::semantic::type_checker`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1378,"byte_end":1389,"line_start":29,"line_end":29,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":50,"highlight_end":61}],"label":"no `Environment` in `frontend::semantic::type_checker`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1391,"byte_end":1396,"line_start":29,"line_end":29,"column_start":63,"column_end":68,"is_primary":true,"text":[{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":63,"highlight_end":68}],"label":"no `Value` in `frontend::semantic::type_checker`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items instead:\ncrate::ErrorKind::Type\ncrate::Type\ncrate::backend::debug::TemplateParameterKind::Type\ncrate::middleend::ir::Operand::Type\ncrate::middleend::ir::Type\ncrate::typesystem::ConstantValue::Type\ncrate::typesystem::Kind::Type\ncrate::typesystem::types::Type\nswiftlight_stdlib::std::types::Type","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing this enum through its public re-export instead:\ncrate::middleend::ir::Value","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `super::type_checker::Type`, `super::type_checker::Environment`, `super::type_checker::Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:29:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::type_checker::{TypeCheckResult, Type, Environment, Value};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Value` in `frontend::semantic::type_checker`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Environment` in `frontend::semantic::type_checker`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Type` in `frontend::semantic::type_checker`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m           crate::ErrorKind::Type\u001b[0m\n\u001b[0m           crate::Type\u001b[0m\n\u001b[0m           crate::backend::debug::TemplateParameterKind::Type\u001b[0m\n\u001b[0m           crate::middleend::ir::Operand::Type\u001b[0m\n\u001b[0m           crate::middleend::ir::Type\u001b[0m\n\u001b[0m           crate::typesystem::ConstantValue::Type\u001b[0m\n\u001b[0m           crate::typesystem::Kind::Type\u001b[0m\n\u001b[0m           crate::typesystem::types::Type\u001b[0m\n\u001b[0m           swiftlight_stdlib::std::types::Type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this enum through its public re-export instead:\u001b[0m\n\u001b[0m           crate::middleend::ir::Value\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::error::Diagnostic`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/analyzer.rs","byte_start":310,"byte_end":320,"line_start":7,"line_end":7,"column_start":53,"column_end":63,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError, Diagnostic};","highlight_start":53,"highlight_end":63}],"label":"no `Diagnostic` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items instead:\ncrate::Diagnostic\ncrate::diagnostics::Diagnostic\ncrate::frontend::Diagnostic\ncrate::frontend::semantic::Diagnostic\ncrate::utils::diagnostics::Diagnostic","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::error::Diagnostic`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/analyzer.rs:7:53\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompilerError, Diagnostic};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Diagnostic` in `frontend::error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m          crate::Diagnostic\u001b[0m\n\u001b[0m          crate::diagnostics::Diagnostic\u001b[0m\n\u001b[0m          crate::frontend::Diagnostic\u001b[0m\n\u001b[0m          crate::frontend::semantic::Diagnostic\u001b[0m\n\u001b[0m          crate::utils::diagnostics::Diagnostic\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::error::Diagnostic`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":478,"byte_end":488,"line_start":14,"line_end":14,"column_start":80,"column_end":90,"is_primary":true,"text":[{"text":"use crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":80,"highlight_end":90}],"label":"no `Diagnostic` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items instead:\ncrate::Diagnostic\ncrate::diagnostics::Diagnostic\ncrate::frontend::Diagnostic\ncrate::frontend::semantic::Diagnostic\ncrate::utils::diagnostics::Diagnostic","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::error::Diagnostic`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs:14:80\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result, Diagnostic};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Diagnostic` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these items instead:\u001b[0m\n\u001b[0m           crate::Diagnostic\u001b[0m\n\u001b[0m           crate::diagnostics::Diagnostic\u001b[0m\n\u001b[0m           crate::frontend::Diagnostic\u001b[0m\n\u001b[0m           crate::frontend::semantic::Diagnostic\u001b[0m\n\u001b[0m           crate::utils::diagnostics::Diagnostic\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::ast::AstNode`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs","byte_start":27,"byte_end":34,"line_start":1,"line_end":1,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{AstNode, Visibility};","highlight_start":28,"highlight_end":35}],"label":"no `AstNode` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::ast::AstNode`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/name_resolution.rs:1:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{AstNode, Visibility};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `AstNode` in `frontend::ast`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `colored`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":585,"byte_end":592,"line_start":15,"line_end":15,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use colored::*;","highlight_start":5,"highlight_end":12}],"label":"use of undeclared crate or module `colored`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `colored`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse colored::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `colored`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::ast::ty`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/hir.rs","byte_start":46,"byte_end":48,"line_start":2,"line_end":2,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"use crate::ast::ty::TypeKind;","highlight_start":17,"highlight_end":19}],"label":"could not find `ty` in `ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::ast::ty`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/hir.rs:2:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::ast::ty::TypeKind;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ty` in `ast`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::hir::HirId`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/hir.rs","byte_start":64,"byte_end":91,"line_start":3,"line_end":3,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"use crate::frontend::hir::HirId;","highlight_start":5,"highlight_end":32}],"label":"no `HirId` in `frontend::hir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::hir::HirId`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/hir.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::hir::HirId;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `HirId` in `frontend::hir`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `self::ast::AstNode`, `self::error::DiagnosticBuilder`, `self::source_map::Span`, `self::diagnostic::EmissionHandler`, `self::module::ModuleGraph`, `self::hir::HirTranslator`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1729,"byte_end":1736,"line_start":54,"line_end":54,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"    ast::{Program, AstNode},","highlight_start":20,"highlight_end":27}],"label":"no `AstNode` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1785,"byte_end":1802,"line_start":55,"line_end":55,"column_start":47,"column_end":64,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, DiagnosticBuilder},","highlight_start":47,"highlight_end":64}],"label":"no `DiagnosticBuilder` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1833,"byte_end":1837,"line_start":56,"line_end":56,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    source_map::{SourceMap, Span},","highlight_start":29,"highlight_end":33}],"label":"no `Span` in `frontend::source_map`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1886,"byte_end":1901,"line_start":57,"line_end":57,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"    diagnostic::{Diagnostic, DiagnosticLevel, EmissionHandler},","highlight_start":47,"highlight_end":62}],"label":"no `EmissionHandler` in `frontend::diagnostic`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1925,"byte_end":1936,"line_start":58,"line_end":58,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"    module::{Module, ModuleGraph},","highlight_start":22,"highlight_end":33}],"label":"no `ModuleGraph` in `frontend::module`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":1958,"byte_end":1971,"line_start":59,"line_end":59,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    hir::{HirNode, HirTranslator}","highlight_start":20,"highlight_end":33}],"label":"no `HirTranslator` in `frontend::hir`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct instead:\ncrate::parser::ast::Span","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `self::ast::AstNode`, `self::error::DiagnosticBuilder`, `self::source_map::Span`, `self::diagnostic::EmissionHandler`, `self::module::ModuleGraph`, `self::hir::HirTranslator`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/mod.rs:54:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ast::{Program, AstNode},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `AstNode` in `frontend::ast`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, DiagnosticBuilder},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `DiagnosticBuilder` in `frontend::error`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    source_map::{SourceMap, Span},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Span` in `frontend::source_map`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    diagnostic::{Diagnostic, DiagnosticLevel, EmissionHandler},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `EmissionHandler` in `frontend::diagnostic`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    module::{Module, ModuleGraph},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ModuleGraph` in `frontend::module`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    hir::{HirNode, HirTranslator}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `HirTranslator` in `frontend::hir`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           crate::parser::ast::Span\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::error::Diagnostic`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":1154,"byte_end":1164,"line_start":24,"line_end":24,"column_start":53,"column_end":63,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError, Diagnostic, SourceLocation};","highlight_start":53,"highlight_end":63}],"label":"no `Diagnostic` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead:\ncrate::Diagnostic\ncrate::diagnostics::Diagnostic\ncrate::frontend::Diagnostic\ncrate::utils::diagnostics::Diagnostic","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::error::Diagnostic`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:24:53\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompilerError, Diagnostic, SourceLocation};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Diagnostic` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead:\u001b[0m\n\u001b[0m           crate::Diagnostic\u001b[0m\n\u001b[0m           crate::diagnostics::Diagnostic\u001b[0m\n\u001b[0m           crate::frontend::Diagnostic\u001b[0m\n\u001b[0m           crate::utils::diagnostics::Diagnostic\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::ir`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86.rs","byte_start":25,"byte_end":27,"line_start":2,"line_end":2,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"use crate::ir::{Value, Type};","highlight_start":12,"highlight_end":14}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86.rs","byte_start":25,"byte_end":27,"line_start":2,"line_end":2,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"use crate::ir::{Value, Type};","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"middleend::ir","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::ir`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86.rs:2:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::ir::{Value, Type};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `middleend::ir`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::optimization::BandwidthAwareOptimizer`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86.rs","byte_start":48,"byte_end":92,"line_start":3,"line_end":3,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"use crate::optimization::BandwidthAwareOptimizer;","highlight_start":5,"highlight_end":49}],"label":"no `BandwidthAwareOptimizer` in `optimization`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::optimization::BandwidthAwareOptimizer`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::optimization::BandwidthAwareOptimizer;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `BandwidthAwareOptimizer` in `optimization`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::util`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86.rs","byte_start":105,"byte_end":109,"line_start":4,"line_end":4,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"use crate::util::AlignedVec;","highlight_start":12,"highlight_end":16}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86.rs","byte_start":105,"byte_end":109,"line_start":4,"line_end":4,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"use crate::util::AlignedVec;","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"llvm_sys::transforms::util","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::util`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86.rs:4:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::util::AlignedVec;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `llvm_sys::transforms::util`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::middleend::ir::representation::InstructionKind`, `crate::middleend::ir::representation::ValueId`, `crate::middleend::ir::representation::FunctionId`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":514,"byte_end":529,"line_start":11,"line_end":11,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};","highlight_start":44,"highlight_end":59}],"label":"no `InstructionKind` in `middleend::ir::representation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":531,"byte_end":538,"line_start":11,"line_end":11,"column_start":61,"column_end":68,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};","highlight_start":61,"highlight_end":68}],"label":"no `ValueId` in `middleend::ir::representation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":540,"byte_end":550,"line_start":11,"line_end":11,"column_start":70,"column_end":80,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};","highlight_start":70,"highlight_end":80}],"label":"no `FunctionId` in `middleend::ir::representation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"these items exist but are inaccessible:\ncrate::middleend::analysis::dataflow::tests::ValueId","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86_64.rs","byte_start":956,"byte_end":977,"line_start":20,"line_end":20,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"type ValueId = usize;","highlight_start":1,"highlight_end":22}],"label":"`crate::backend::native::x86_64::ValueId`: not accessible","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"type alias `crate::backend::native::x86_64::FunctionId` exists but is inaccessible","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86_64.rs","byte_start":1000,"byte_end":1024,"line_start":22,"line_end":22,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"type FunctionId = usize;","highlight_start":1,"highlight_end":25}],"label":"not accessible","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":514,"byte_end":529,"line_start":11,"line_end":11,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};","highlight_start":44,"highlight_end":59}],"label":null,"suggested_replacement":"Instruction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":531,"byte_end":538,"line_start":11,"line_end":11,"column_start":61,"column_end":68,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};","highlight_start":61,"highlight_end":68}],"label":null,"suggested_replacement":"Value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":540,"byte_end":550,"line_start":11,"line_end":11,"column_start":70,"column_end":80,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};","highlight_start":70,"highlight_end":80}],"label":null,"suggested_replacement":"Function","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::middleend::ir::representation::InstructionKind`, `crate::middleend::ir::representation::ValueId`, `crate::middleend::ir::representation::FunctionId`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/arm64.rs:11:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::representation::{InstructionKind, ValueId, FunctionId};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `FunctionId` in `middleend::ir::representation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ValueId` in `middleend::ir::representation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `InstructionKind` in `middleend::ir::representation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: these items exist but are inaccessible:\u001b[0m\n\u001b[0m      crate::middleend::analysis::dataflow::tests::ValueId\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86_64.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ValueId = usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m`crate::backend::native::x86_64::ValueId`: not accessible\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: type alias `crate::backend::native::x86_64::FunctionId` exists but is inaccessible\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86_64.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype FunctionId = usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mnot accessible\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::representation::{\u001b[0m\u001b[0m\u001b[38;5;10mInstruction\u001b[0m\u001b[0m, ValueId, FunctionId};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::representation::{InstructionKind, \u001b[0m\u001b[0m\u001b[38;5;10mValue\u001b[0m\u001b[0m, FunctionId};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::representation::{InstructionKind, ValueId, \u001b[0m\u001b[0m\u001b[38;5;10mFunction\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::error::CompileError`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":717,"byte_end":729,"line_start":20,"line_end":20,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompileError, ErrorKind};","highlight_start":38,"highlight_end":50}],"label":"no `CompileError` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this variant instead:\ncrate::typesystem::traits::ErrorKind::CompileError","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":717,"byte_end":729,"line_start":20,"line_end":20,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompileError, ErrorKind};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":"CompilerError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::error::CompileError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:20:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompileError, ErrorKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CompileError` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `CompilerError`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this variant instead:\u001b[0m\n\u001b[0m           crate::typesystem::traits::ErrorKind::CompileError\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::error::CompileError`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":566,"byte_end":578,"line_start":12,"line_end":12,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompileError, ErrorKind};","highlight_start":38,"highlight_end":50}],"label":"no `CompileError` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this variant instead:\ncrate::typesystem::traits::ErrorKind::CompileError","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":566,"byte_end":578,"line_start":12,"line_end":12,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompileError, ErrorKind};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":"CompilerError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::error::CompileError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:12:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompileError, ErrorKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CompileError` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `CompilerError`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this variant instead:\u001b[0m\n\u001b[0m           crate::typesystem::traits::ErrorKind::CompileError\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::backend::analysis::AnalysisKey`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":640,"byte_end":651,"line_start":13,"line_end":13,"column_start":49,"column_end":60,"is_primary":true,"text":[{"text":"use crate::backend::analysis::{AnalysisManager, AnalysisKey};","highlight_start":49,"highlight_end":60}],"label":"no `AnalysisKey` in `backend::analysis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":640,"byte_end":651,"line_start":13,"line_end":13,"column_start":49,"column_end":60,"is_primary":true,"text":[{"text":"use crate::backend::analysis::{AnalysisManager, AnalysisKey};","highlight_start":49,"highlight_end":60}],"label":null,"suggested_replacement":"AnalysisKind","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::backend::analysis::AnalysisKey`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:13:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::backend::analysis::{AnalysisManager, AnalysisKey};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `AnalysisKey` in `backend::analysis`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `AnalysisKind`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::backend::target::TargetInfo`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":683,"byte_end":693,"line_start":14,"line_end":14,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"use crate::backend::target::{TargetInfo, TargetFeature};","highlight_start":30,"highlight_end":40}],"label":"no `TargetInfo` in `backend::target`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct instead:\ncrate::backend::native::x86_64::TargetInfo","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":683,"byte_end":693,"line_start":14,"line_end":14,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"use crate::backend::target::{TargetInfo, TargetFeature};","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":"TargetEnv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::backend::target::TargetInfo`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:14:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::backend::target::{TargetInfo, TargetFeature};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TargetInfo` in `backend::target`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `TargetEnv`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           crate::backend::native::x86_64::TargetInfo\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rayon`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":628,"byte_end":633,"line_start":14,"line_end":14,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"use rayon::prelude::*;","highlight_start":5,"highlight_end":10}],"label":"use of undeclared crate or module `rayon`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `rayon`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rayon::prelude::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rayon`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::backend::codegen::InstructionSelection`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":715,"byte_end":760,"line_start":15,"line_end":15,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"use crate::backend::codegen::InstructionSelection;","highlight_start":5,"highlight_end":50}],"label":"no `InstructionSelection` in `backend::codegen`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::backend::codegen::InstructionSelection`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::backend::codegen::InstructionSelection;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `InstructionSelection` in `backend::codegen`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::frontend::ast::Node`, `crate::frontend::ast::NodeKind`, `crate::frontend::error::DiagnosticReporter`, `crate::frontend::error::Severity`, `crate::frontend::symbol_table`, `crate::frontend::type_checker`, `crate::frontend::name_resolution`, `crate::frontend::dependency_analyzer`, `crate::frontend::macro_expander`, `crate::frontend::constant_evaluator`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":904,"byte_end":908,"line_start":24,"line_end":24,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"    ast::{Program, Node, NodeId, NodeKind},","highlight_start":20,"highlight_end":24}],"label":"no `Node` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":918,"byte_end":926,"line_start":24,"line_end":24,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"    ast::{Program, Node, NodeId, NodeKind},","highlight_start":34,"highlight_end":42}],"label":"no `NodeKind` in `frontend::ast`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":991,"byte_end":1009,"line_start":25,"line_end":25,"column_start":63,"column_end":81,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":63,"highlight_end":81}],"label":"no `DiagnosticReporter` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1011,"byte_end":1019,"line_start":25,"line_end":25,"column_start":83,"column_end":91,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":83,"highlight_end":91}],"label":"no `Severity` in `frontend::error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1026,"byte_end":1038,"line_start":26,"line_end":26,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility},","highlight_start":5,"highlight_end":17}],"label":"could not find `symbol_table` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1091,"byte_end":1103,"line_start":27,"line_end":27,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    type_checker::TypeChecker,","highlight_start":5,"highlight_end":17}],"label":"could not find `type_checker` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1122,"byte_end":1137,"line_start":28,"line_end":28,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    name_resolution::NameResolver,","highlight_start":5,"highlight_end":20}],"label":"could not find `name_resolution` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1157,"byte_end":1176,"line_start":29,"line_end":29,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    dependency_analyzer::DependencyAnalyzer,","highlight_start":5,"highlight_end":24}],"label":"could not find `dependency_analyzer` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1202,"byte_end":1216,"line_start":30,"line_end":30,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    macro_expander::MacroExpander,","highlight_start":5,"highlight_end":19}],"label":"could not find `macro_expander` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1237,"byte_end":1255,"line_start":31,"line_end":31,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    constant_evaluator::ConstantEvaluator","highlight_start":5,"highlight_end":23}],"label":"could not find `constant_evaluator` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct instead:\ncrate::backend::native::x86_64::Node","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing this struct instead:\ncrate::driver::diagnostics::DiagnosticReporter","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::frontend::ast::Node`, `crate::frontend::ast::NodeKind`, `crate::frontend::error::DiagnosticReporter`, `crate::frontend::error::Severity`, `crate::frontend::symbol_table`, `crate::frontend::type_checker`, `crate::frontend::name_resolution`, `crate::frontend::dependency_analyzer`, `crate::frontend::macro_expander`, `crate::frontend::constant_evaluator`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:24:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ast::{Program, Node, NodeId, NodeKind},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `NodeKind` in `frontend::ast`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Node` in `frontend::ast`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Severity` in `frontend::error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `DiagnosticReporter` in `frontend::error`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `symbol_table` in `frontend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type_checker::TypeChecker,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `type_checker` in `frontend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    name_resolution::NameResolver,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `name_resolution` in `frontend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    dependency_analyzer::DependencyAnalyzer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `dependency_analyzer` in `frontend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    macro_expander::MacroExpander,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `macro_expander` in `frontend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    constant_evaluator::ConstantEvaluator\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `constant_evaluator` in `frontend`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           crate::backend::native::x86_64::Node\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing this struct instead:\u001b[0m\n\u001b[0m           crate::driver::diagnostics::DiagnosticReporter\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::middleend::optimization::PassManager`, `crate::middleend::optimization::Pass`, `crate::middleend::optimization::PassContext`, `crate::middleend::ir_validator`, `crate::middleend::ir_generator`, `crate::middleend::ir_serializer`, `crate::middleend::ir_deserializer`, `crate::middleend::dataflow_analyzer`, `crate::middleend::alias_analyzer`, `crate::middleend::memory_layout_optimizer`, `crate::middleend::parallel_region_analyzer`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1354,"byte_end":1365,"line_start":35,"line_end":35,"column_start":45,"column_end":56,"is_primary":true,"text":[{"text":"    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},","highlight_start":45,"highlight_end":56}],"label":"no `PassManager` in `middleend::optimization`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1367,"byte_end":1371,"line_start":35,"line_end":35,"column_start":58,"column_end":62,"is_primary":true,"text":[{"text":"    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},","highlight_start":58,"highlight_end":62}],"label":"no `Pass` in `middleend::optimization`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1373,"byte_end":1384,"line_start":35,"line_end":35,"column_start":64,"column_end":75,"is_primary":true,"text":[{"text":"    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},","highlight_start":64,"highlight_end":75}],"label":"no `PassContext` in `middleend::optimization`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1391,"byte_end":1403,"line_start":36,"line_end":36,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    ir_validator::IRValidator,","highlight_start":5,"highlight_end":17}],"label":"could not find `ir_validator` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1422,"byte_end":1434,"line_start":37,"line_end":37,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    ir_generator::IRGenerator,","highlight_start":5,"highlight_end":17}],"label":"could not find `ir_generator` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1453,"byte_end":1466,"line_start":38,"line_end":38,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    ir_serializer::IRSerializer,","highlight_start":5,"highlight_end":18}],"label":"could not find `ir_serializer` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1486,"byte_end":1501,"line_start":39,"line_end":39,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    ir_deserializer::IRDeserializer,","highlight_start":5,"highlight_end":20}],"label":"could not find `ir_deserializer` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1523,"byte_end":1540,"line_start":40,"line_end":40,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    dataflow_analyzer::DataFlowAnalyzer,","highlight_start":5,"highlight_end":22}],"label":"could not find `dataflow_analyzer` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1564,"byte_end":1578,"line_start":41,"line_end":41,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    alias_analyzer::AliasAnalyzer,","highlight_start":5,"highlight_end":19}],"label":"could not find `alias_analyzer` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1599,"byte_end":1622,"line_start":42,"line_end":42,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"    memory_layout_optimizer::MemoryLayoutOptimizer,","highlight_start":5,"highlight_end":28}],"label":"could not find `memory_layout_optimizer` in `middleend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1651,"byte_end":1675,"line_start":43,"line_end":43,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    parallel_region_analyzer::ParallelRegionAnalyzer","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead:\ncrate::backend::optimization::PassManager\ninkwell::passes::PassManager","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1367,"byte_end":1371,"line_start":35,"line_end":35,"column_start":58,"column_end":62,"is_primary":true,"text":[{"text":"    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},","highlight_start":58,"highlight_end":62}],"label":null,"suggested_replacement":"pass","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::middleend::optimization::PassManager`, `crate::middleend::optimization::Pass`, `crate::middleend::optimization::PassContext`, `crate::middleend::ir_validator`, `crate::middleend::ir_generator`, `crate::middleend::ir_serializer`, `crate::middleend::ir_deserializer`, `crate::middleend::dataflow_analyzer`, `crate::middleend::alias_analyzer`, `crate::middleend::memory_layout_optimizer`, `crate::middleend::parallel_region_analyzer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:35:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `PassContext` in `middleend::optimization`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Pass` in `middleend::optimization`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `pass`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `PassManager` in `middleend::optimization`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ir_validator::IRValidator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ir_validator` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ir_generator::IRGenerator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ir_generator` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ir_serializer::IRSerializer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ir_serializer` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ir_deserializer::IRDeserializer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ir_deserializer` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    dataflow_analyzer::DataFlowAnalyzer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `dataflow_analyzer` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    alias_analyzer::AliasAnalyzer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `alias_analyzer` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    memory_layout_optimizer::MemoryLayoutOptimizer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `memory_layout_optimizer` in `middleend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parallel_region_analyzer::ParallelRegionAnalyzer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead:\u001b[0m\n\u001b[0m           crate::backend::optimization::PassManager\u001b[0m\n\u001b[0m           inkwell::passes::PassManager\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::backend::CodegenOptions`, `crate::backend::TargetFeature`, `crate::backend::register_allocator`, `crate::backend::instruction_scheduler`, `crate::backend::code_emitter`, `crate::backend::binary_generator`, `crate::backend::debug_info_generator`, `crate::backend::platform_specific`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1752,"byte_end":1766,"line_start":46,"line_end":46,"column_start":28,"column_end":42,"is_primary":true,"text":[{"text":"    self, Target, Backend, CodegenOptions, TargetFeature, ","highlight_start":28,"highlight_end":42}],"label":"no `CodegenOptions` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1768,"byte_end":1781,"line_start":46,"line_end":46,"column_start":44,"column_end":57,"is_primary":true,"text":[{"text":"    self, Target, Backend, CodegenOptions, TargetFeature, ","highlight_start":44,"highlight_end":57}],"label":"no `TargetFeature` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1788,"byte_end":1806,"line_start":47,"line_end":47,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    register_allocator::RegisterAllocator,","highlight_start":5,"highlight_end":23}],"label":"could not find `register_allocator` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1831,"byte_end":1852,"line_start":48,"line_end":48,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    instruction_scheduler::InstructionScheduler,","highlight_start":5,"highlight_end":26}],"label":"could not find `instruction_scheduler` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1880,"byte_end":1892,"line_start":49,"line_end":49,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    code_emitter::CodeEmitter,","highlight_start":5,"highlight_end":17}],"label":"could not find `code_emitter` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1911,"byte_end":1927,"line_start":50,"line_end":50,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    binary_generator::BinaryGenerator,","highlight_start":5,"highlight_end":21}],"label":"could not find `binary_generator` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1950,"byte_end":1970,"line_start":51,"line_end":51,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    debug_info_generator::DebugInfoGenerator,","highlight_start":5,"highlight_end":25}],"label":"could not find `debug_info_generator` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1996,"byte_end":2013,"line_start":52,"line_end":52,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    platform_specific::PlatformSpecificGenerator","highlight_start":5,"highlight_end":22}],"label":"could not find `platform_specific` in `backend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead:\ncrate::backend::codegen::CodegenOptions\ncrate::driver::config::CodegenOptions","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these enums instead:\ncrate::backend::native::x86_64::TargetFeature\ncrate::backend::target::TargetFeature","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1768,"byte_end":1781,"line_start":46,"line_end":46,"column_start":44,"column_end":57,"is_primary":true,"text":[{"text":"    self, Target, Backend, CodegenOptions, TargetFeature, ","highlight_start":44,"highlight_end":57}],"label":null,"suggested_replacement":"TargetFeatures","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::backend::CodegenOptions`, `crate::backend::TargetFeature`, `crate::backend::register_allocator`, `crate::backend::instruction_scheduler`, `crate::backend::code_emitter`, `crate::backend::binary_generator`, `crate::backend::debug_info_generator`, `crate::backend::platform_specific`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:46:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self, Target, Backend, CodegenOptions, TargetFeature, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TargetFeature` in `backend`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `TargetFeatures`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CodegenOptions` in `backend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    register_allocator::RegisterAllocator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `register_allocator` in `backend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    instruction_scheduler::InstructionScheduler,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `instruction_scheduler` in `backend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    code_emitter::CodeEmitter,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `code_emitter` in `backend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    binary_generator::BinaryGenerator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `binary_generator` in `backend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    debug_info_generator::DebugInfoGenerator,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `debug_info_generator` in `backend`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    platform_specific::PlatformSpecificGenerator\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `platform_specific` in `backend`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead:\u001b[0m\n\u001b[0m           crate::backend::codegen::CodegenOptions\u001b[0m\n\u001b[0m           crate::driver::config::CodegenOptions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these enums instead:\u001b[0m\n\u001b[0m           crate::backend::native::x86_64::TargetFeature\u001b[0m\n\u001b[0m           crate::backend::target::TargetFeature\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::driver::cache::CacheMetadata`, `crate::driver::cache::CacheStrategy`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2231,"byte_end":2244,"line_start":58,"line_end":58,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},","highlight_start":43,"highlight_end":56}],"label":"no `CacheMetadata` in `driver::cache`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2246,"byte_end":2259,"line_start":58,"line_end":58,"column_start":58,"column_end":71,"is_primary":true,"text":[{"text":"    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},","highlight_start":58,"highlight_end":71}],"label":"no `CacheStrategy` in `driver::cache`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::driver::cache::CacheMetadata`, `crate::driver::cache::CacheStrategy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:58:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CacheStrategy` in `driver::cache`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CacheMetadata` in `driver::cache`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::metaprogramming`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":755,"byte_end":770,"line_start":15,"line_end":15,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"use crate::frontend::metaprogramming::MetaProgrammingOptions;","highlight_start":22,"highlight_end":37}],"label":"could not find `metaprogramming` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::metaprogramming`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/config.rs:15:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::metaprogramming::MetaProgrammingOptions;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `metaprogramming` in `frontend`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: unresolved import","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":867,"byte_end":875,"line_start":17,"line_end":17,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"use crate::analysis::formal_verification::FormalVerificationOptions;","highlight_start":12,"highlight_end":20}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":867,"byte_end":875,"line_start":17,"line_end":17,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"use crate::analysis::formal_verification::FormalVerificationOptions;","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"llvm_sys::analysis","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: unresolved import\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/config.rs:17:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::analysis::formal_verification::FormalVerificationOptions;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `llvm_sys::analysis`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: unresolved import","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":936,"byte_end":944,"line_start":18,"line_end":18,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"use crate::analysis::security::SecurityCheckOptions;","highlight_start":12,"highlight_end":20}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":936,"byte_end":944,"line_start":18,"line_end":18,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"use crate::analysis::security::SecurityCheckOptions;","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"llvm_sys::analysis","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: unresolved import\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/config.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::analysis::security::SecurityCheckOptions;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `llvm_sys::analysis`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::dependent_types`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":817,"byte_end":832,"line_start":16,"line_end":16,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"use crate::frontend::dependent_types::DependentTypeOptions;","highlight_start":22,"highlight_end":37}],"label":"could not find `dependent_types` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::dependent_types`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/config.rs:16:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::dependent_types::DependentTypeOptions;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `dependent_types` in `frontend`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::optimization::pipeline`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/config.rs","byte_start":1003,"byte_end":1011,"line_start":19,"line_end":19,"column_start":26,"column_end":34,"is_primary":true,"text":[{"text":"use crate::optimization::pipeline::OptimizationPipeline;","highlight_start":26,"highlight_end":34}],"label":"could not find `pipeline` in `optimization`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::optimization::pipeline`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/config.rs:19:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::optimization::pipeline::OptimizationPipeline;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `pipeline` in `optimization`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::ir`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":321,"byte_end":330,"line_start":12,"line_end":12,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use crate::ir;","highlight_start":5,"highlight_end":14}],"label":"no `ir` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":328,"byte_end":330,"line_start":12,"line_end":12,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"use crate::ir;","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"io","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this module instead","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":321,"byte_end":330,"line_start":12,"line_end":12,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use crate::ir;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"crate::middleend::ir","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::ir`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/pipeline.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::ir;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ir` in the root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::\u001b[0m\u001b[0m\u001b[38;5;10mio\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this module instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mcrate::middleend::ir\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::typesystem::TypeChecker`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":336,"byte_end":366,"line_start":13,"line_end":13,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::typesystem::TypeChecker;","highlight_start":5,"highlight_end":35}],"label":"no `TypeChecker` in `typesystem`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct through its public re-export instead","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":336,"byte_end":366,"line_start":13,"line_end":13,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::typesystem::TypeChecker;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":"crate::TypeChecker","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::typesystem::TypeChecker`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/pipeline.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::typesystem::TypeChecker;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TypeChecker` in `typesystem`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct through its public re-export instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mcrate::TypeChecker\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::semantics`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":379,"byte_end":388,"line_start":14,"line_end":14,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"use crate::semantics::SemanticAnalyzer;","highlight_start":12,"highlight_end":21}],"label":"could not find `semantics` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::semantics`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/pipeline.rs:14:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::semantics::SemanticAnalyzer;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `semantics` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `self::diagnostics::DiagnosticEmitter`, `self::diagnostics::Severity`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":741,"byte_end":758,"line_start":19,"line_end":19,"column_start":29,"column_end":46,"is_primary":true,"text":[{"text":"pub use self::diagnostics::{DiagnosticEmitter, Severity};","highlight_start":29,"highlight_end":46}],"label":"no `DiagnosticEmitter` in `driver::diagnostics`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":760,"byte_end":768,"line_start":19,"line_end":19,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"pub use self::diagnostics::{DiagnosticEmitter, Severity};","highlight_start":48,"highlight_end":56}],"label":"no `Severity` in `driver::diagnostics`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead:\ncrate::DiagnosticEmitter\ncrate::utils::diagnostics::DiagnosticEmitter","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":741,"byte_end":758,"line_start":19,"line_end":19,"column_start":29,"column_end":46,"is_primary":true,"text":[{"text":"pub use self::diagnostics::{DiagnosticEmitter, Severity};","highlight_start":29,"highlight_end":46}],"label":null,"suggested_replacement":"DiagnosticFormatter","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `self::diagnostics::DiagnosticEmitter`, `self::diagnostics::Severity`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:19:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::diagnostics::{DiagnosticEmitter, Severity};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Severity` in `driver::diagnostics`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `DiagnosticEmitter` in `driver::diagnostics`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `DiagnosticFormatter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead:\u001b[0m\n\u001b[0m           crate::DiagnosticEmitter\u001b[0m\n\u001b[0m           crate::utils::diagnostics::DiagnosticEmitter\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rayon`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":966,"byte_end":971,"line_start":26,"line_end":26,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"use rayon::prelude::*;","highlight_start":5,"highlight_end":10}],"label":"use of undeclared crate or module `rayon`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `rayon`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rayon::prelude::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rayon`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `self::pipeline::CompilationStage`, `self::pipeline::Pipeline`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":796,"byte_end":812,"line_start":20,"line_end":20,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"pub use self::pipeline::{CompilationStage, Pipeline};","highlight_start":26,"highlight_end":42}],"label":"no `CompilationStage` in `driver::pipeline`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":814,"byte_end":822,"line_start":20,"line_end":20,"column_start":44,"column_end":52,"is_primary":true,"text":[{"text":"pub use self::pipeline::{CompilationStage, Pipeline};","highlight_start":44,"highlight_end":52}],"label":"no `Pipeline` in `driver::pipeline`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `self::pipeline::CompilationStage`, `self::pipeline::Pipeline`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:20:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::pipeline::{CompilationStage, Pipeline};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Pipeline` in `driver::pipeline`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `CompilationStage` in `driver::pipeline`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::frontend::source`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1070,"byte_end":1076,"line_start":28,"line_end":28,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"use crate::frontend::source::SourceFile;","highlight_start":22,"highlight_end":28}],"label":"could not find `source` in `frontend`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::frontend::source`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:28:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::source::SourceFile;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `source` in `frontend`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::backend::target::TargetMachine`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1128,"byte_end":1165,"line_start":30,"line_end":30,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"use crate::backend::target::TargetMachine;","highlight_start":5,"highlight_end":42}],"label":"no `TargetMachine` in `backend::target`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1128,"byte_end":1165,"line_start":30,"line_end":30,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"use crate::backend::target::TargetMachine;","highlight_start":5,"highlight_end":42}],"label":null,"suggested_replacement":"crate::backend::debug::TargetMachine","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1128,"byte_end":1165,"line_start":30,"line_end":30,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"use crate::backend::target::TargetMachine;","highlight_start":5,"highlight_end":42}],"label":null,"suggested_replacement":"inkwell::targets::TargetMachine","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::backend::target::TargetMachine`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::backend::target::TargetMachine;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TargetMachine` in `backend::target`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mcrate::backend::debug::TargetMachine\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10minkwell::targets::TargetMachine\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `sha2`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":9965,"byte_end":9969,"line_start":349,"line_end":349,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    use sha2::{Sha256, Digest};","highlight_start":9,"highlight_end":13}],"label":"use of undeclared crate or module `sha2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `sha2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/utils.rs:349:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use sha2::{Sha256, Digest};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `sha2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `colored`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15659,"byte_end":15666,"line_start":555,"line_end":555,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    use colored::*;","highlight_start":9,"highlight_end":16}],"label":"use of undeclared crate or module `colored`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `colored`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/utils.rs:555:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use colored::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `colored`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `self::types::TypeRegistry`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1331,"byte_end":1343,"line_start":46,"line_end":46,"column_start":37,"column_end":49,"is_primary":true,"text":[{"text":"pub use self::types::{Type, TypeId, TypeRegistry};","highlight_start":37,"highlight_end":49}],"label":"no `TypeRegistry` in `typesystem::types`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs instead:\ncrate::TypeRegistry\ncrate::backend::debug::TypeRegistry","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `self::types::TypeRegistry`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:46:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::{Type, TypeId, TypeRegistry};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `TypeRegistry` in `typesystem::types`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider importing one of these structs instead:\u001b[0m\n\u001b[0m           crate::TypeRegistry\u001b[0m\n\u001b[0m           crate::backend::debug::TypeRegistry\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `unicode_width`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":601,"byte_end":614,"line_start":16,"line_end":16,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use unicode_width::UnicodeWidthStr;","highlight_start":5,"highlight_end":18}],"label":"use of undeclared crate or module `unicode_width`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `unicode_width`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse unicode_width::UnicodeWidthStr;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `unicode_width`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `parking_lot`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":651,"byte_end":662,"line_start":15,"line_end":15,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use parking_lot::{ReentrantMutex, Condvar};","highlight_start":5,"highlight_end":16}],"label":"use of undeclared crate or module `parking_lot`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `parking_lot`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse parking_lot::{ReentrantMutex, Condvar};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `parking_lot`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crossbeam_channel`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":695,"byte_end":712,"line_start":16,"line_end":16,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use crossbeam_channel::{bounded, Sender, Receiver};","highlight_start":5,"highlight_end":22}],"label":"use of undeclared crate or module `crossbeam_channel`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crossbeam_channel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crossbeam_channel::{bounded, Sender, Receiver};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `crossbeam_channel`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `dashmap`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":747,"byte_end":754,"line_start":17,"line_end":17,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use dashmap::DashMap;","highlight_start":5,"highlight_end":12}],"label":"use of undeclared crate or module `dashmap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `dashmap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse dashmap::DashMap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `dashmap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `memmap2`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":769,"byte_end":776,"line_start":18,"line_end":18,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use memmap2::MmapOptions;","highlight_start":5,"highlight_end":12}],"label":"use of undeclared crate or module `memmap2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `memmap2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse memmap2::MmapOptions;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `memmap2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::driver::dependency`, `crate::driver::incremental`, `crate::driver::module_manager`, `crate::driver::plugin_manager`, `crate::driver::build_plan`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2126,"byte_end":2136,"line_start":57,"line_end":57,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    dependency::{DependencyGraph, DependencyNode, DependencyType},","highlight_start":5,"highlight_end":15}],"label":"could not find `dependency` in `driver`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2266,"byte_end":2277,"line_start":59,"line_end":59,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    incremental::{IncrementalCompilationManager, ChangeDetector, ChangeImpactAnalyzer},","highlight_start":5,"highlight_end":16}],"label":"could not find `incremental` in `driver`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2354,"byte_end":2368,"line_start":60,"line_end":60,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    module_manager::ModuleManager,","highlight_start":5,"highlight_end":19}],"label":"could not find `module_manager` in `driver`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2389,"byte_end":2403,"line_start":61,"line_end":61,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    plugin_manager::PluginManager,","highlight_start":5,"highlight_end":19}],"label":"could not find `plugin_manager` in `driver`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2424,"byte_end":2434,"line_start":62,"line_end":62,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    build_plan::BuildPlan","highlight_start":5,"highlight_end":15}],"label":"could not find `build_plan` in `driver`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::driver::dependency`, `crate::driver::incremental`, `crate::driver::module_manager`, `crate::driver::plugin_manager`, `crate::driver::build_plan`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:57:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    dependency::{DependencyGraph, DependencyNode, DependencyType},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `dependency` in `driver`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    incremental::{IncrementalCompilationManager, ChangeDetector, ChangeImpactAnalyzer},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `incremental` in `driver`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    module_manager::ModuleManager,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `module_manager` in `driver`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    plugin_manager::PluginManager,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `plugin_manager` in `driver`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    build_plan::BuildPlan\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `build_plan` in `driver`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `debug` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":25358,"byte_end":25363,"line_start":638,"line_end":638,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        debug!(\"関数 {} のインライン化を試行中\", callee.name);","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::debug;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::debug;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `debug` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:638:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m638\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        debug!(\"関数 {} のインライン化を試行中\", callee.name);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::debug;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::debug;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `warn` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":25636,"byte_end":25640,"line_start":645,"line_end":645,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            warn!(\"引数の数が一致しないためインライン化を中止: 期待={}, 実際={}\", ","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`warn` is in scope, but it is an attribute: `#[warn]`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `warn` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:645:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            warn!(\"引数の数が一致しないためインライン化を中止: 期待={}, 実際={}\", \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `warn` is in scope, but it is an attribute: `#[warn]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::warn;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::warn;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `warn` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":26375,"byte_end":26379,"line_start":662,"line_end":662,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                warn!(\"エントリーブロックが見つかりませんでした\");","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`warn` is in scope, but it is an attribute: `#[warn]`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `warn` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:662:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                warn!(\"エントリーブロックが見つかりませんでした\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `warn` is in scope, but it is an attribute: `#[warn]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::warn;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::warn;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `warn` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":33177,"byte_end":33181,"line_start":811,"line_end":811,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"                            warn!(\"再帰呼び出しを検出。スキップします。\");","highlight_start":29,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`warn` is in scope, but it is an attribute: `#[warn]`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `warn` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:811:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   warn!(\"再帰呼び出しを検出。スキップします。\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `warn` is in scope, but it is an attribute: `#[warn]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::warn;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::warn;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `debug` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":38650,"byte_end":38655,"line_start":931,"line_end":931,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        debug!(\"関数 {} のインライン化に成功\", callee.name);","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::debug;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::debug;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `debug` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:931:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m931\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        debug!(\"関数 {} のインライン化に成功\", callee.name);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::debug;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::debug;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `warn` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":42373,"byte_end":42377,"line_start":1024,"line_end":1024,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"                warn!(\"プリヘッダーブロックが見つかりません\");","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`warn` is in scope, but it is an attribute: `#[warn]`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `warn` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:1024:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1024\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                warn!(\"プリヘッダーブロックが見つかりません\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `warn` is in scope, but it is an attribute: `#[warn]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::warn;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::warn;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find macro `warn` in this scope","code":null,"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":44723,"byte_end":44727,"line_start":1077,"line_end":1077,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"            warn!(\"プリヘッダーブロックに終端命令がありません\");","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`warn` is in scope, but it is an attribute: `#[warn]`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider importing one of these macros","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7410,"byte_end":7410,"line_start":219,"line_end":219,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use crate::frontend::error::Result;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use log::warn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `warn` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:1077:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1077\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            warn!(\"プリヘッダーブロックに終端命令がありません\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `warn` is in scope, but it is an attribute: `#[warn]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these macros\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::warn;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse log::warn;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":2115,"byte_end":2120,"line_start":65,"line_end":65,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    lexer: Lexer,","highlight_start":12,"highlight_end":17}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":2101,"byte_end":2101,"line_start":64,"line_end":64,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"pub struct FrontendPipeline {","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":2120,"byte_end":2120,"line_start":65,"line_end":65,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"    lexer: Lexer,","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m: missing lifetime specifier\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/mod.rs:65:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    lexer: Lexer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mpub struct FrontendPipeline\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    lexer: Lexer\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":2134,"byte_end":2140,"line_start":66,"line_end":66,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    parser: Parser,","highlight_start":13,"highlight_end":19}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":2101,"byte_end":2101,"line_start":64,"line_end":64,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"pub struct FrontendPipeline {","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/mod.rs","byte_start":2140,"byte_end":2140,"line_start":66,"line_end":66,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    parser: Parser,","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m: missing lifetime specifier\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/mod.rs:66:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parser: Parser,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mpub struct FrontendPipeline\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     lexer: Lexer,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    parser: Parser\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of undeclared lifetime name `'ctx`","code":{"code":"E0261","explanation":"An undeclared lifetime was used.\n\nErroneous code example:\n\n```compile_fail,E0261\n// error, use of undeclared lifetime name `'a`\nfn foo(x: &'a str) { }\n\nstruct Foo {\n    // error, use of undeclared lifetime name `'a`\n    x: &'a str,\n}\n```\n\nThese can be fixed by declaring lifetime parameters:\n\n```\nstruct Foo<'a> {\n    x: &'a str,\n}\n\nfn foo<'a>(x: &'a str) {}\n```\n\nImpl blocks declare lifetime parameters separately. You need to add lifetime\nparameters to an impl block if you're implementing a type that has a lifetime\nparameter of its own.\nFor example:\n\n```compile_fail,E0261\nstruct Foo<'a> {\n    x: &'a str,\n}\n\n// error,  use of undeclared lifetime name `'a`\nimpl Foo<'a> {\n    fn foo<'a>(x: &'a str) {}\n}\n```\n\nThis is fixed by declaring the impl block like this:\n\n```\nstruct Foo<'a> {\n    x: &'a str,\n}\n\n// correct\nimpl<'a> Foo<'a> {\n    fn foo(x: &'a str) {}\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":234874,"byte_end":234878,"line_start":5400,"line_end":5400,"column_start":78,"column_end":82,"is_primary":true,"text":[{"text":"fn evaluate_constexpr(&mut self, expr: &Expression) -> Result<BasicValueEnum<'ctx>> {","highlight_start":78,"highlight_end":82}],"label":"undeclared lifetime","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing lifetime `'ctx` here","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":234818,"byte_end":234818,"line_start":5400,"line_end":5400,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"fn evaluate_constexpr(&mut self, expr: &Expression) -> Result<BasicValueEnum<'ctx>> {","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"<'ctx>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0261]\u001b[0m\u001b[0m\u001b[1m: use of undeclared lifetime name `'ctx`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:5400:78\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn evaluate_constexpr(&mut self, expr: &Expression) -> Result<BasicValueEnum<'ctx>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mundeclared lifetime\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: consider introducing lifetime `'ctx` here: `<'ctx>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of undeclared lifetime name `'ctx`","code":{"code":"E0261","explanation":"An undeclared lifetime was used.\n\nErroneous code example:\n\n```compile_fail,E0261\n// error, use of undeclared lifetime name `'a`\nfn foo(x: &'a str) { }\n\nstruct Foo {\n    // error, use of undeclared lifetime name `'a`\n    x: &'a str,\n}\n```\n\nThese can be fixed by declaring lifetime parameters:\n\n```\nstruct Foo<'a> {\n    x: &'a str,\n}\n\nfn foo<'a>(x: &'a str) {}\n```\n\nImpl blocks declare lifetime parameters separately. You need to add lifetime\nparameters to an impl block if you're implementing a type that has a lifetime\nparameter of its own.\nFor example:\n\n```compile_fail,E0261\nstruct Foo<'a> {\n    x: &'a str,\n}\n\n// error,  use of undeclared lifetime name `'a`\nimpl Foo<'a> {\n    fn foo<'a>(x: &'a str) {}\n}\n```\n\nThis is fixed by declaring the impl block like this:\n\n```\nstruct Foo<'a> {\n    x: &'a str,\n}\n\n// correct\nimpl<'a> Foo<'a> {\n    fn foo(x: &'a str) {}\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":250518,"byte_end":250522,"line_start":5721,"line_end":5721,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"fn lookup_constant_value(&self, name: &str) -> Option<BasicValueEnum<'ctx>> {","highlight_start":70,"highlight_end":74}],"label":"undeclared lifetime","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing lifetime `'ctx` here","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":250473,"byte_end":250473,"line_start":5721,"line_end":5721,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"fn lookup_constant_value(&self, name: &str) -> Option<BasicValueEnum<'ctx>> {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"<'ctx>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0261]\u001b[0m\u001b[0m\u001b[1m: use of undeclared lifetime name `'ctx`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:5721:70\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5721\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn lookup_constant_value(&self, name: &str) -> Option<BasicValueEnum<'ctx>> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mundeclared lifetime\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: consider introducing lifetime `'ctx` here: `<'ctx>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't use `Self` from outer item","code":{"code":"E0401","explanation":"Inner items do not inherit the generic parameters from the items\nthey are embedded in.\n\nErroneous code example:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    fn bar(y: T) { // T is defined in the \"outer\" function\n        // ..\n    }\n    bar(x);\n}\n```\n\nNor will this:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    type MaybeT = Option<T>;\n    // ...\n}\n```\n\nOr this:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    struct Foo {\n        x: T,\n    }\n    // ...\n}\n```\n\nItems nested inside other items are basically just like top-level items, except\nthat they can only be used from the item they are in.\n\nThere are a couple of solutions for this.\n\nIf the item is a function, you may use a closure:\n\n```\nfn foo<T>(x: T) {\n    let bar = |y: T| { // explicit type annotation may not be necessary\n        // ..\n    };\n    bar(x);\n}\n```\n\nFor a generic item, you can copy over the parameters:\n\n```\nfn foo<T>(x: T) {\n    fn bar<T>(y: T) {\n        // ..\n    }\n    bar(x);\n}\n```\n\n```\nfn foo<T>(x: T) {\n    type MaybeT<T> = Option<T>;\n}\n```\n\nBe sure to copy over any bounds as well:\n\n```\nfn foo<T: Copy>(x: T) {\n    fn bar<T: Copy>(y: T) {\n        // ..\n    }\n    bar(x);\n}\n```\n\n```\nfn foo<T: Copy>(x: T) {\n    struct Foo<T: Copy> {\n        x: T,\n    }\n}\n```\n\nThis may require additional type hints in the function body.\n\nIn case the item is a function inside an `impl`, defining a private helper\nfunction might be easier:\n\n```\n# struct Foo<T>(T);\nimpl<T> Foo<T> {\n    pub fn foo(&self, x: T) {\n        self.bar(x);\n    }\n\n    fn bar(&self, y: T) {\n        // ..\n    }\n}\n```\n\nFor default impls in traits, the private helper solution won't work, however\nclosures or copying the parameters should still work.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":26632,"byte_end":26636,"line_start":714,"line_end":714,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn vectorize(&self, module: &mut Module) -> Result<usize> {","highlight_start":23,"highlight_end":27}],"label":"use of `Self` from outer item","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":11958,"byte_end":11962,"line_start":350,"line_end":350,"column_start":1,"column_end":5,"is_primary":false,"text":[{"text":"impl Vectorizer {","highlight_start":1,"highlight_end":5}],"label":"`Self` type implicitly declared here, by this `impl`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":26632,"byte_end":26636,"line_start":714,"line_end":714,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn vectorize(&self, module: &mut Module) -> Result<usize> {","highlight_start":23,"highlight_end":27}],"label":"refer to the type directly here instead","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0401]\u001b[0m\u001b[0m\u001b[1m: can't use `Self` from outer item\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:714:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Vectorizer {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`Self` type implicitly declared here, by this `impl`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m714\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn vectorize(&self, module: &mut Module) -> Result<usize> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of `Self` from outer item\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrefer to the type directly here instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't use `Self` from outer item","code":{"code":"E0401","explanation":"Inner items do not inherit the generic parameters from the items\nthey are embedded in.\n\nErroneous code example:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    fn bar(y: T) { // T is defined in the \"outer\" function\n        // ..\n    }\n    bar(x);\n}\n```\n\nNor will this:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    type MaybeT = Option<T>;\n    // ...\n}\n```\n\nOr this:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    struct Foo {\n        x: T,\n    }\n    // ...\n}\n```\n\nItems nested inside other items are basically just like top-level items, except\nthat they can only be used from the item they are in.\n\nThere are a couple of solutions for this.\n\nIf the item is a function, you may use a closure:\n\n```\nfn foo<T>(x: T) {\n    let bar = |y: T| { // explicit type annotation may not be necessary\n        // ..\n    };\n    bar(x);\n}\n```\n\nFor a generic item, you can copy over the parameters:\n\n```\nfn foo<T>(x: T) {\n    fn bar<T>(y: T) {\n        // ..\n    }\n    bar(x);\n}\n```\n\n```\nfn foo<T>(x: T) {\n    type MaybeT<T> = Option<T>;\n}\n```\n\nBe sure to copy over any bounds as well:\n\n```\nfn foo<T: Copy>(x: T) {\n    fn bar<T: Copy>(y: T) {\n        // ..\n    }\n    bar(x);\n}\n```\n\n```\nfn foo<T: Copy>(x: T) {\n    struct Foo<T: Copy> {\n        x: T,\n    }\n}\n```\n\nThis may require additional type hints in the function body.\n\nIn case the item is a function inside an `impl`, defining a private helper\nfunction might be easier:\n\n```\n# struct Foo<T>(T);\nimpl<T> Foo<T> {\n    pub fn foo(&self, x: T) {\n        self.bar(x);\n    }\n\n    fn bar(&self, y: T) {\n        // ..\n    }\n}\n```\n\nFor default impls in traits, the private helper solution won't work, however\nclosures or copying the parameters should still work.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":27377,"byte_end":27381,"line_start":737,"line_end":737,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    fn vectorize_loop(&self, _module: &mut Module, _loop_id: &str) -> Result<bool> {","highlight_start":24,"highlight_end":28}],"label":"use of `Self` from outer item","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":11958,"byte_end":11962,"line_start":350,"line_end":350,"column_start":1,"column_end":5,"is_primary":false,"text":[{"text":"impl Vectorizer {","highlight_start":1,"highlight_end":5}],"label":"`Self` type implicitly declared here, by this `impl`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":27377,"byte_end":27381,"line_start":737,"line_end":737,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    fn vectorize_loop(&self, _module: &mut Module, _loop_id: &str) -> Result<bool> {","highlight_start":24,"highlight_end":28}],"label":"refer to the type directly here instead","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0401]\u001b[0m\u001b[0m\u001b[1m: can't use `Self` from outer item\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:737:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Vectorizer {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`Self` type implicitly declared here, by this `impl`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m737\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn vectorize_loop(&self, _module: &mut Module, _loop_id: &str) -> Result<bool> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of `Self` from outer item\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrefer to the type directly here instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't use `Self` from outer item","code":{"code":"E0401","explanation":"Inner items do not inherit the generic parameters from the items\nthey are embedded in.\n\nErroneous code example:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    fn bar(y: T) { // T is defined in the \"outer\" function\n        // ..\n    }\n    bar(x);\n}\n```\n\nNor will this:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    type MaybeT = Option<T>;\n    // ...\n}\n```\n\nOr this:\n\n```compile_fail,E0401\nfn foo<T>(x: T) {\n    struct Foo {\n        x: T,\n    }\n    // ...\n}\n```\n\nItems nested inside other items are basically just like top-level items, except\nthat they can only be used from the item they are in.\n\nThere are a couple of solutions for this.\n\nIf the item is a function, you may use a closure:\n\n```\nfn foo<T>(x: T) {\n    let bar = |y: T| { // explicit type annotation may not be necessary\n        // ..\n    };\n    bar(x);\n}\n```\n\nFor a generic item, you can copy over the parameters:\n\n```\nfn foo<T>(x: T) {\n    fn bar<T>(y: T) {\n        // ..\n    }\n    bar(x);\n}\n```\n\n```\nfn foo<T>(x: T) {\n    type MaybeT<T> = Option<T>;\n}\n```\n\nBe sure to copy over any bounds as well:\n\n```\nfn foo<T: Copy>(x: T) {\n    fn bar<T: Copy>(y: T) {\n        // ..\n    }\n    bar(x);\n}\n```\n\n```\nfn foo<T: Copy>(x: T) {\n    struct Foo<T: Copy> {\n        x: T,\n    }\n}\n```\n\nThis may require additional type hints in the function body.\n\nIn case the item is a function inside an `impl`, defining a private helper\nfunction might be easier:\n\n```\n# struct Foo<T>(T);\nimpl<T> Foo<T> {\n    pub fn foo(&self, x: T) {\n        self.bar(x);\n    }\n\n    fn bar(&self, y: T) {\n        // ..\n    }\n}\n```\n\nFor default impls in traits, the private helper solution won't work, however\nclosures or copying the parameters should still work.\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":27644,"byte_end":27648,"line_start":744,"line_end":744,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"    fn vectorize_function(&self, _module: &mut Module, _function_id: &str) -> Result<bool> {","highlight_start":28,"highlight_end":32}],"label":"use of `Self` from outer item","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":11958,"byte_end":11962,"line_start":350,"line_end":350,"column_start":1,"column_end":5,"is_primary":false,"text":[{"text":"impl Vectorizer {","highlight_start":1,"highlight_end":5}],"label":"`Self` type implicitly declared here, by this `impl`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":27644,"byte_end":27648,"line_start":744,"line_end":744,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"    fn vectorize_function(&self, _module: &mut Module, _function_id: &str) -> Result<bool> {","highlight_start":28,"highlight_end":32}],"label":"refer to the type directly here instead","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0401]\u001b[0m\u001b[0m\u001b[1m: can't use `Self` from outer item\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:744:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Vectorizer {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`Self` type implicitly declared here, by this `impl`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m744\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn vectorize_function(&self, _module: &mut Module, _function_id: &str) -> Result<bool> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of `Self` from outer item\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrefer to the type directly here instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":6333,"byte_end":6347,"line_start":236,"line_end":236,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"        location: SourceLocation,","highlight_start":19,"highlight_end":33}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:236:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        location: SourceLocation,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":6450,"byte_end":6464,"line_start":240,"line_end":240,"column_start":27,"column_end":41,"is_primary":true,"text":[{"text":"    UndefinedType(String, SourceLocation),","highlight_start":27,"highlight_end":41}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:240:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UndefinedType(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":6557,"byte_end":6571,"line_start":243,"line_end":243,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"    UnresolvedTypeVariable(String, SourceLocation),","highlight_start":36,"highlight_end":50}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:243:36\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UnresolvedTypeVariable(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":6678,"byte_end":6692,"line_start":246,"line_end":246,"column_start":27,"column_end":41,"is_primary":true,"text":[{"text":"    RecursiveType(String, SourceLocation),","highlight_start":27,"highlight_end":41}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:246:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RecursiveType(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":6768,"byte_end":6782,"line_start":249,"line_end":249,"column_start":32,"column_end":46,"is_primary":true,"text":[{"text":"    OwnershipViolation(String, SourceLocation),","highlight_start":32,"highlight_end":46}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:249:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OwnershipViolation(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":6867,"byte_end":6881,"line_start":252,"line_end":252,"column_start":32,"column_end":46,"is_primary":true,"text":[{"text":"    BorrowCheckFailure(String, SourceLocation),","highlight_start":32,"highlight_end":46}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:252:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    BorrowCheckFailure(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":7108,"byte_end":7122,"line_start":258,"line_end":258,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"        location: SourceLocation,","highlight_start":19,"highlight_end":33}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:258:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        location: SourceLocation,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":7248,"byte_end":7262,"line_start":262,"line_end":262,"column_start":37,"column_end":51,"is_primary":true,"text":[{"text":"    GenericArgumentMismatch(String, SourceLocation),","highlight_start":37,"highlight_end":51}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:262:37\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GenericArgumentMismatch(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":7351,"byte_end":7365,"line_start":265,"line_end":265,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"    InferenceFailure(String, SourceLocation),","highlight_start":30,"highlight_end":44}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:265:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    InferenceFailure(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":7575,"byte_end":7589,"line_start":271,"line_end":271,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"        location: SourceLocation,","highlight_start":19,"highlight_end":33}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:271:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        location: SourceLocation,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":7813,"byte_end":7827,"line_start":278,"line_end":278,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"        location: SourceLocation,","highlight_start":19,"highlight_end":33}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:278:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        location: SourceLocation,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":7947,"byte_end":7961,"line_start":282,"line_end":282,"column_start":46,"column_end":60,"is_primary":true,"text":[{"text":"    DependentTypeVerificationFailure(String, SourceLocation),","highlight_start":46,"highlight_end":60}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:282:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DependentTypeVerificationFailure(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8047,"byte_end":8061,"line_start":285,"line_end":285,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"    LinearTypeViolation(String, SourceLocation),","highlight_start":33,"highlight_end":47}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:285:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LinearTypeViolation(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8133,"byte_end":8147,"line_start":288,"line_end":288,"column_start":31,"column_end":45,"is_primary":true,"text":[{"text":"    ContractViolation(String, SourceLocation),","highlight_start":31,"highlight_end":45}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:288:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ContractViolation(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8249,"byte_end":8263,"line_start":291,"line_end":291,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"    InvalidTypeStateTransition(String, SourceLocation),","highlight_start":40,"highlight_end":54}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:291:40\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    InvalidTypeStateTransition(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8362,"byte_end":8376,"line_start":294,"line_end":294,"column_start":37,"column_end":51,"is_primary":true,"text":[{"text":"    InvalidQuantumOperation(String, SourceLocation),","highlight_start":37,"highlight_end":51}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:294:37\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    InvalidQuantumOperation(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8498,"byte_end":8512,"line_start":297,"line_end":297,"column_start":45,"column_end":59,"is_primary":true,"text":[{"text":"    RefinementConditionNotSatisfied(String, SourceLocation),","highlight_start":45,"highlight_end":59}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:297:45\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RefinementConditionNotSatisfied(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8621,"byte_end":8635,"line_start":300,"line_end":300,"column_start":41,"column_end":55,"is_primary":true,"text":[{"text":"    TypeLevelComputationFailure(String, SourceLocation),","highlight_start":41,"highlight_end":55}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:300:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TypeLevelComputationFailure(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8709,"byte_end":8723,"line_start":303,"line_end":303,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"    CapabilityViolation(String, SourceLocation),","highlight_start":33,"highlight_end":47}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:303:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CapabilityViolation(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`SourceLocation` is ambiguous","code":{"code":"E0659","explanation":"An item usage is ambiguous.\n\nErroneous code example:\n\n```compile_fail,edition2018,E0659\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon::*;\n    pub use crate::earth::*;\n}\n\nfn main() {\n    crate::collider::foo(); // ERROR: `foo` is ambiguous\n}\n```\n\nThis error generally appears when two items with the same name are imported into\na module. Here, the `foo` functions are imported and reexported from the\n`collider` module and therefore, when we're using `collider::foo()`, both\nfunctions collide.\n\nTo solve this error, the best solution is generally to keep the path before the\nitem when using it. Example:\n\n```edition2018\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use crate::moon;\n    pub use crate::earth;\n}\n\nfn main() {\n    crate::collider::moon::foo(); // ok!\n    crate::collider::earth::foo(); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":8793,"byte_end":8807,"line_start":306,"line_end":306,"column_start":29,"column_end":43,"is_primary":true,"text":[{"text":"    RegionViolation(String, SourceLocation),","highlight_start":29,"highlight_end":43}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`SourceLocation` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `SourceLocation` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0659]\u001b[0m\u001b[0m\u001b[1m: `SourceLocation` is ambiguous\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:306:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RegionViolation(String, SourceLocation),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mambiguous name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `SourceLocation` could also refer to the type alias imported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `SourceLocation` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Token` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":657,"byte_end":662,"line_start":17,"line_end":17,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":30,"highlight_end":35}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Token` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":295,"byte_end":307,"line_start":9,"line_end":9,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use token::Token;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Token` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":12302,"byte_end":12318,"line_start":438,"line_end":438,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub struct Token {","highlight_start":1,"highlight_end":17}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Token` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":657,"byte_end":662,"line_start":17,"line_end":17,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":"frontend::lexer::token::Token","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Token` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:17:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, TokenKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Token` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::Token;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Token` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:438:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Token {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Token` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::frontend::lexer::{\u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::Token\u001b[0m\u001b[0m, TokenKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `TokenKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":664,"byte_end":673,"line_start":17,"line_end":17,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":37,"highlight_end":46}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `TokenKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":313,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use token::TokenKind;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `TokenKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":340,"byte_end":358,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum TokenKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `TokenKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":664,"byte_end":673,"line_start":17,"line_end":17,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":37,"highlight_end":46}],"label":null,"suggested_replacement":"frontend::lexer::token::TokenKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `TokenKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:17:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, TokenKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `TokenKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `TokenKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum TokenKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `TokenKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::TokenKind\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Token` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":435,"byte_end":440,"line_start":8,"line_end":8,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":30,"highlight_end":35}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Token` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":295,"byte_end":307,"line_start":9,"line_end":9,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use token::Token;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Token` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":12302,"byte_end":12318,"line_start":438,"line_end":438,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub struct Token {","highlight_start":1,"highlight_end":17}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Token` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":435,"byte_end":440,"line_start":8,"line_end":8,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":"frontend::lexer::token::Token","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Token` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/error.rs:8:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, TokenKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Token` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::Token;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Token` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:438:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Token {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Token` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::frontend::lexer::{\u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::Token\u001b[0m\u001b[0m, TokenKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `TokenKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":442,"byte_end":451,"line_start":8,"line_end":8,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":37,"highlight_end":46}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `TokenKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":313,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use token::TokenKind;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `TokenKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":340,"byte_end":358,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum TokenKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `TokenKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":442,"byte_end":451,"line_start":8,"line_end":8,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":37,"highlight_end":46}],"label":null,"suggested_replacement":"frontend::lexer::token::TokenKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `TokenKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/error.rs:8:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, TokenKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `TokenKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `TokenKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum TokenKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `TokenKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::TokenKind\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Token` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":415,"byte_end":420,"line_start":11,"line_end":11,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":30,"highlight_end":35}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Token` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":295,"byte_end":307,"line_start":9,"line_end":9,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use token::Token;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Token` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":12302,"byte_end":12318,"line_start":438,"line_end":438,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub struct Token {","highlight_start":1,"highlight_end":17}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Token` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":415,"byte_end":420,"line_start":11,"line_end":11,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":"frontend::lexer::token::Token","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Token` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/expression.rs:11:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, TokenKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Token` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::Token;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Token` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:438:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Token {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Token` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::frontend::lexer::{\u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::Token\u001b[0m\u001b[0m, TokenKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `TokenKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":422,"byte_end":431,"line_start":11,"line_end":11,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":37,"highlight_end":46}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `TokenKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":313,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use token::TokenKind;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `TokenKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":340,"byte_end":358,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum TokenKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `TokenKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":422,"byte_end":431,"line_start":11,"line_end":11,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::{Token, TokenKind};","highlight_start":37,"highlight_end":46}],"label":null,"suggested_replacement":"frontend::lexer::token::TokenKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `TokenKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/expression.rs:11:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, TokenKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `TokenKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `TokenKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum TokenKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `TokenKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::frontend::lexer::{Token, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::TokenKind\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `TokenKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/statement.rs","byte_start":295,"byte_end":304,"line_start":8,"line_end":8,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::TokenKind;","highlight_start":29,"highlight_end":38}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `TokenKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":313,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use token::TokenKind;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `TokenKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":340,"byte_end":358,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum TokenKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `TokenKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/statement.rs","byte_start":271,"byte_end":304,"line_start":8,"line_end":8,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::TokenKind;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":"frontend::lexer::token::TokenKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `TokenKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/statement.rs:8:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `TokenKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `TokenKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum TokenKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `TokenKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::TokenKind\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `TokenKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":387,"byte_end":396,"line_start":11,"line_end":11,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::TokenKind;","highlight_start":29,"highlight_end":38}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `TokenKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":313,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use token::TokenKind;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `TokenKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":340,"byte_end":358,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum TokenKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `TokenKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":363,"byte_end":396,"line_start":11,"line_end":11,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::TokenKind;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":"frontend::lexer::token::TokenKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `TokenKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/declaration.rs:11:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `TokenKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `TokenKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum TokenKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `TokenKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::TokenKind\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `TokenKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/types.rs","byte_start":306,"byte_end":315,"line_start":8,"line_end":8,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::TokenKind;","highlight_start":29,"highlight_end":38}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `TokenKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/mod.rs","byte_start":313,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use token::TokenKind;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `TokenKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/lexer/token.rs","byte_start":340,"byte_end":358,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum TokenKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `TokenKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/types.rs","byte_start":282,"byte_end":315,"line_start":8,"line_end":8,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::lexer::TokenKind;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":"frontend::lexer::token::TokenKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `TokenKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/types.rs:8:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::lexer::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `TokenKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/mod.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse token::TokenKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `TokenKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/lexer/token.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum TokenKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `TokenKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::lexer::token::TokenKind\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":548,"byte_end":556,"line_start":15,"line_end":15,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":17,"highlight_end":25}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":548,"byte_end":556,"line_start":15,"line_end":15,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/dataflow.rs:15:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    BasicBlock, Function, Instruction, Module, Value, ValueId, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    BasicBlock, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, Instruction, Module, Value, ValueId, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":578,"byte_end":586,"line_start":20,"line_end":20,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};","highlight_start":36,"highlight_end":44}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":578,"byte_end":586,"line_start":20,"line_end":20,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};","highlight_start":36,"highlight_end":44}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/mod.rs:20:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::{Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, BasicBlock, Instruction, OpCode, Value, Operand};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":32771,"byte_end":32779,"line_start":756,"line_end":756,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":17,"highlight_end":25}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":32771,"byte_end":32779,"line_start":756,"line_end":756,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/mod.rs:756:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, BasicBlock, Instruction, OpCode, Type, Value, Operand\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":473,"byte_end":481,"line_start":14,"line_end":14,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function};","highlight_start":36,"highlight_end":44}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":473,"byte_end":481,"line_start":14,"line_end":14,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function};","highlight_start":36,"highlight_end":44}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:14:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::{Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7485,"byte_end":7493,"line_start":220,"line_end":220,"column_start":40,"column_end":48,"is_primary":true,"text":[{"text":"    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};","highlight_start":40,"highlight_end":48}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7485,"byte_end":7493,"line_start":220,"line_end":220,"column_start":40,"column_end":48,"is_primary":true,"text":[{"text":"    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};","highlight_start":40,"highlight_end":48}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:220:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use crate::middleend::ir::{Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, Instruction, BasicBlock, Value, Type, BinaryOp};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65460,"byte_end":65468,"line_start":1529,"line_end":1529,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":17,"highlight_end":25}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65460,"byte_end":65468,"line_start":1529,"line_end":1529,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:1529:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, BasicBlock, Instruction, OpCode, Type, Value, Operand\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":362,"byte_end":370,"line_start":10,"line_end":10,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Value, Instruction, Function, Module, Type};","highlight_start":48,"highlight_end":56}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":362,"byte_end":370,"line_start":10,"line_end":10,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Value, Instruction, Function, Module, Type};","highlight_start":48,"highlight_end":56}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:10:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Value, Instruction, Function, Module, Type};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::{Value, Instruction, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, Module, Type};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":439,"byte_end":447,"line_start":10,"line_end":10,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":36,"highlight_end":44}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":439,"byte_end":447,"line_start":10,"line_end":10,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":36,"highlight_end":44}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:10:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::{Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, BasicBlock, Instruction, Value, Type, ControlFlow};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":391,"byte_end":399,"line_start":10,"line_end":10,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};","highlight_start":36,"highlight_end":44}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":391,"byte_end":399,"line_start":10,"line_end":10,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};","highlight_start":36,"highlight_end":44}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:10:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::middleend::ir::{Module, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m, BasicBlock, Instruction, Value, Type, Loop};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `OptimizationLevel` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1335,"byte_end":1352,"line_start":35,"line_end":35,"column_start":26,"column_end":43,"is_primary":true,"text":[{"text":"    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},","highlight_start":26,"highlight_end":43}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `OptimizationLevel` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":488,"byte_end":523,"line_start":15,"line_end":15,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use crate::middleend::OptimizationLevel;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `OptimizationLevel` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/mod.rs","byte_start":1286,"byte_end":1312,"line_start":37,"line_end":37,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"pub enum OptimizationLevel {","highlight_start":1,"highlight_end":27}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `OptimizationLevel` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1335,"byte_end":1352,"line_start":35,"line_end":35,"column_start":26,"column_end":43,"is_primary":true,"text":[{"text":"    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},","highlight_start":26,"highlight_end":43}],"label":null,"suggested_replacement":"middleend::OptimizationLevel","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `OptimizationLevel` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:35:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    optimization::{self, OptimizationLevel, PassManager, Pass, PassContext},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `OptimizationLevel` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::OptimizationLevel;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `OptimizationLevel` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/mod.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum OptimizationLevel {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `OptimizationLevel` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    optimization::{self, \u001b[0m\u001b[0m\u001b[38;5;10mmiddleend::OptimizationLevel\u001b[0m\u001b[0m, PassManager, Pass, PassContext},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `CompilerError` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/diagnostics.rs","byte_start":252,"byte_end":265,"line_start":10,"line_end":10,"column_start":30,"column_end":43,"is_primary":true,"text":[{"text":"use crate::driver::compiler::CompilerError;","highlight_start":30,"highlight_end":43}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `CompilerError` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":941,"byte_end":954,"line_start":25,"line_end":25,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `CompilerError` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":9577,"byte_end":9601,"line_start":283,"line_end":283,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub struct CompilerError {","highlight_start":1,"highlight_end":25}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `CompilerError` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/diagnostics.rs","byte_start":227,"byte_end":265,"line_start":10,"line_end":10,"column_start":5,"column_end":43,"is_primary":true,"text":[{"text":"use crate::driver::compiler::CompilerError;","highlight_start":5,"highlight_end":43}],"label":null,"suggested_replacement":"frontend::error::CompilerError","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `CompilerError` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/diagnostics.rs:10:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::driver::compiler::CompilerError;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `CompilerError` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:25:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `CompilerError` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:283:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct CompilerError {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `CompilerError` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::error::CompilerError\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `ErrorKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/diagnostics.rs","byte_start":296,"byte_end":305,"line_start":11,"line_end":11,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"use crate::driver::compiler::ErrorKind;","highlight_start":30,"highlight_end":39}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `ErrorKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":956,"byte_end":965,"line_start":25,"line_end":25,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":28,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `ErrorKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":708,"byte_end":726,"line_start":20,"line_end":20,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum ErrorKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `ErrorKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/diagnostics.rs","byte_start":271,"byte_end":305,"line_start":11,"line_end":11,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::driver::compiler::ErrorKind;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":"frontend::error::ErrorKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `ErrorKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/diagnostics.rs:11:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::driver::compiler::ErrorKind;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `ErrorKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:25:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `ErrorKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum ErrorKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `ErrorKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::error::ErrorKind\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `CompilerError` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":467,"byte_end":480,"line_start":15,"line_end":15,"column_start":60,"column_end":73,"is_primary":true,"text":[{"text":"use crate::driver::compiler::{CompileResult, CompileStats, CompilerError, ErrorKind};","highlight_start":60,"highlight_end":73}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `CompilerError` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":941,"byte_end":954,"line_start":25,"line_end":25,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `CompilerError` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":9577,"byte_end":9601,"line_start":283,"line_end":283,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub struct CompilerError {","highlight_start":1,"highlight_end":25}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `CompilerError` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":467,"byte_end":480,"line_start":15,"line_end":15,"column_start":60,"column_end":73,"is_primary":true,"text":[{"text":"use crate::driver::compiler::{CompileResult, CompileStats, CompilerError, ErrorKind};","highlight_start":60,"highlight_end":73}],"label":null,"suggested_replacement":"frontend::error::CompilerError","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `CompilerError` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/pipeline.rs:15:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::driver::compiler::{CompileResult, CompileStats, CompilerError, ErrorKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `CompilerError` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:25:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `CompilerError` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:283:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct CompilerError {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `CompilerError` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::driver::compiler::{CompileResult, CompileStats, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::error::CompilerError\u001b[0m\u001b[0m, ErrorKind};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum import `ErrorKind` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":482,"byte_end":491,"line_start":15,"line_end":15,"column_start":75,"column_end":84,"is_primary":true,"text":[{"text":"use crate::driver::compiler::{CompileResult, CompileStats, CompilerError, ErrorKind};","highlight_start":75,"highlight_end":84}],"label":"private enum import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the enum import `ErrorKind` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":956,"byte_end":965,"line_start":25,"line_end":25,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":28,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the enum `ErrorKind` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":708,"byte_end":726,"line_start":20,"line_end":20,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub enum ErrorKind {","highlight_start":1,"highlight_end":19}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `ErrorKind` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/pipeline.rs","byte_start":482,"byte_end":491,"line_start":15,"line_end":15,"column_start":75,"column_end":84,"is_primary":true,"text":[{"text":"use crate::driver::compiler::{CompileResult, CompileStats, CompilerError, ErrorKind};","highlight_start":75,"highlight_end":84}],"label":null,"suggested_replacement":"frontend::error::ErrorKind","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: enum import `ErrorKind` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/pipeline.rs:15:75\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::driver::compiler::{CompileResult, CompileStats, CompilerError, ErrorKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate enum import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the enum import `ErrorKind` is defined here...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:25:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the enum `ErrorKind` which is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum ErrorKind {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `ErrorKind` directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::driver::compiler::{CompileResult, CompileStats, CompilerError, \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::error::ErrorKind\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `SourceLocation` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1178,"byte_end":1192,"line_start":39,"line_end":39,"column_start":34,"column_end":48,"is_primary":true,"text":[{"text":"use crate::frontend::source_map::SourceLocation;","highlight_start":34,"highlight_end":48}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `SourceLocation` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/source_map.rs","byte_start":337,"byte_end":351,"line_start":12,"line_end":12,"column_start":30,"column_end":44,"is_primary":true,"text":[{"text":"use crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result};","highlight_start":30,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `SourceLocation` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":5530,"byte_end":5555,"line_start":147,"line_end":147,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"pub struct SourceLocation {","highlight_start":1,"highlight_end":26}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"import `SourceLocation` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1149,"byte_end":1192,"line_start":39,"line_end":39,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"use crate::frontend::source_map::SourceLocation;","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":"frontend::error::SourceLocation","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `SourceLocation` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:39:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::source_map::SourceLocation;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `SourceLocation` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/source_map.rs:12:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `SourceLocation` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:147:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SourceLocation {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `SourceLocation` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::error::SourceLocation\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `VariableDeclaration` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":31814,"byte_end":31833,"line_start":795,"line_end":795,"column_start":36,"column_end":55,"is_primary":true,"text":[{"text":"                    variable: ast::VariableDeclaration {","highlight_start":36,"highlight_end":55}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `VariableDeclaration` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":14688,"byte_end":14711,"line_start":611,"line_end":611,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use crate::frontend::ast::*;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `VariableDeclaration` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":3293,"byte_end":3323,"line_start":116,"line_end":116,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"pub struct VariableDeclaration {","highlight_start":1,"highlight_end":31}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider importing this struct instead","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":31809,"byte_end":31833,"line_start":795,"line_end":795,"column_start":31,"column_end":55,"is_primary":true,"text":[{"text":"                    variable: ast::VariableDeclaration {","highlight_start":31,"highlight_end":55}],"label":null,"suggested_replacement":"crate::ast::VariableDeclaration","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"import `VariableDeclaration` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":31809,"byte_end":31833,"line_start":795,"line_end":795,"column_start":31,"column_end":55,"is_primary":true,"text":[{"text":"                    variable: ast::VariableDeclaration {","highlight_start":31,"highlight_end":55}],"label":null,"suggested_replacement":"frontend::ast::VariableDeclaration","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `VariableDeclaration` is private\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:795:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    variable: ast::VariableDeclaration {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `VariableDeclaration` is defined here...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/ast.rs:611:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m611\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `VariableDeclaration` which is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:116:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct VariableDeclaration {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    variable: \u001b[0m\u001b[0m\u001b[38;5;10mcrate::ast::VariableDeclaration\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `VariableDeclaration` directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    variable: \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::VariableDeclaration\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct import `Function` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":48268,"byte_end":48276,"line_start":1167,"line_end":1167,"column_start":44,"column_end":52,"is_primary":true,"text":[{"text":"                    let mut new_func = ir::Function {","highlight_start":44,"highlight_end":52}],"label":"private struct import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the struct import `Function` is defined here...","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":873,"byte_end":881,"line_start":21,"line_end":21,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};","highlight_start":88,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...and refers to the struct `Function` which is defined here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/ast.rs","byte_start":4516,"byte_end":4535,"line_start":164,"line_end":164,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub struct Function {","highlight_start":1,"highlight_end":20}],"label":"you could import this directly","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider importing this struct instead","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":48264,"byte_end":48276,"line_start":1167,"line_end":1167,"column_start":40,"column_end":52,"is_primary":true,"text":[{"text":"                    let mut new_func = ir::Function {","highlight_start":40,"highlight_end":52}],"label":null,"suggested_replacement":"crate::ast::Function","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"import `Function` directly","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":48264,"byte_end":48276,"line_start":1167,"line_end":1167,"column_start":40,"column_end":52,"is_primary":true,"text":[{"text":"                    let mut new_func = ir::Function {","highlight_start":40,"highlight_end":52}],"label":null,"suggested_replacement":"frontend::ast::Function","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: struct import `Function` is private\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:1167:44\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut new_func = ir::Function {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate struct import\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the struct import `Function` is defined here...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:21:88\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{ExpressionKind, StatementKind, DeclarationKind, Identifier, Function};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...and refers to the struct `Function` which is defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/ast.rs:164:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Function {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10myou could import this directly\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let mut new_func = \u001b[0m\u001b[0m\u001b[38;5;10mcrate::ast::Function\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: import `Function` directly\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let mut new_func = \u001b[0m\u001b[0m\u001b[38;5;10mfrontend::ast::Function\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `HashSet` and `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":909,"byte_end":916,"line_start":20,"line_end":20,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":918,"byte_end":926,"line_start":20,"line_end":20,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":907,"byte_end":926,"line_start":20,"line_end":20,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":899,"byte_end":900,"line_start":20,"line_end":20,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":926,"byte_end":927,"line_start":20,"line_end":20,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `HashSet` and `VecDeque`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:20:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, VecDeque};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Instant`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":955,"byte_end":962,"line_start":21,"line_end":21,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"use std::time::{Duration, Instant};","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":953,"byte_end":962,"line_start":21,"line_end":21,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"use std::time::{Duration, Instant};","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":944,"byte_end":945,"line_start":21,"line_end":21,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"use std::time::{Duration, Instant};","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":962,"byte_end":963,"line_start":21,"line_end":21,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"use std::time::{Duration, Instant};","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Instant`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:21:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::{Duration, Instant};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":979,"byte_end":983,"line_start":22,"line_end":22,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, Read, Write};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":979,"byte_end":985,"line_start":22,"line_end":22,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{self, Read, Write};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:22:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Read, Write};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::thread`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1003,"byte_end":1014,"line_start":23,"line_end":23,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::thread;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":999,"byte_end":1016,"line_start":23,"line_end":24,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::thread;","highlight_start":1,"highlight_end":17},{"text":"use std::fmt;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::thread`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::thread;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1020,"byte_end":1028,"line_start":24,"line_end":24,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1016,"byte_end":1030,"line_start":24,"line_end":25,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `debug`, `error`, `info`, and `trace`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1081,"byte_end":1086,"line_start":27,"line_end":27,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1088,"byte_end":1093,"line_start":27,"line_end":27,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1095,"byte_end":1099,"line_start":27,"line_end":27,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1101,"byte_end":1106,"line_start":27,"line_end":27,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":31,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1081,"byte_end":1108,"line_start":27,"line_end":27,"column_start":11,"column_end":38,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":11,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1080,"byte_end":1081,"line_start":27,"line_end":27,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1112,"byte_end":1113,"line_start":27,"line_end":27,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"use log::{debug, error, info, trace, warn};","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `debug`, `error`, `info`, and `trace`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:27:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse log::{debug, error, info, trace, warn};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `thiserror::Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1185,"byte_end":1201,"line_start":30,"line_end":30,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use thiserror::Error;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":1181,"byte_end":1203,"line_start":30,"line_end":31,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use thiserror::Error;","highlight_start":1,"highlight_end":22},{"text":"// use parking_lot::{RwLock, Mutex as PLMutex};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `thiserror::Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse thiserror::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BinaryOperator`, `NodeId`, and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":325,"byte_end":329,"line_start":11,"line_end":11,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":331,"byte_end":345,"line_start":11,"line_end":11,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":426,"byte_end":432,"line_start":12,"line_end":12,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"    Identifier, Literal, LiteralKind, NodeId, Parameter, Program,","highlight_start":39,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":325,"byte_end":347,"line_start":11,"line_end":11,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":424,"byte_end":432,"line_start":12,"line_end":12,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"    Identifier, Literal, LiteralKind, NodeId, Parameter, Program,","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BinaryOperator`, `NodeId`, and `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self, BinaryOperator, EnumVariant, Expression, ExpressionKind,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Identifier, Literal, LiteralKind, NodeId, Parameter, Program,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ErrorKind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":592,"byte_end":601,"line_start":16,"line_end":16,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result, SourceLocation};","highlight_start":45,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/mod.rs","byte_start":590,"byte_end":601,"line_start":16,"line_end":16,"column_start":43,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result, SourceLocation};","highlight_start":43,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ErrorKind`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/mod.rs:16:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{CompilerError, ErrorKind, Result, SourceLocation};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ErrorKind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":378,"byte_end":387,"line_start":7,"line_end":7,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, SourceLocation};","highlight_start":45,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":376,"byte_end":387,"line_start":7,"line_end":7,"column_start":43,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, SourceLocation};","highlight_start":43,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ErrorKind`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/error.rs:7:45\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{CompilerError, ErrorKind, SourceLocation};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `DiagnosticLevel`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":500,"byte_end":515,"line_start":9,"line_end":9,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"use crate::frontend::diagnostic::{Diagnostic, DiagnosticLevel};","highlight_start":47,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":498,"byte_end":515,"line_start":9,"line_end":9,"column_start":45,"column_end":62,"is_primary":true,"text":[{"text":"use crate::frontend::diagnostic::{Diagnostic, DiagnosticLevel};","highlight_start":45,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":487,"byte_end":488,"line_start":9,"line_end":9,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"use crate::frontend::diagnostic::{Diagnostic, DiagnosticLevel};","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/error.rs","byte_start":515,"byte_end":516,"line_start":9,"line_end":9,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"use crate::frontend::diagnostic::{Diagnostic, DiagnosticLevel};","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `DiagnosticLevel`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/error.rs:9:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::diagnostic::{Diagnostic, DiagnosticLevel};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Statement` and `TypeAnnotation`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":288,"byte_end":297,"line_start":8,"line_end":8,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    LiteralKind, Statement, TypeAnnotation, UnaryOperator,","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":299,"byte_end":313,"line_start":8,"line_end":8,"column_start":29,"column_end":43,"is_primary":true,"text":[{"text":"    LiteralKind, Statement, TypeAnnotation, UnaryOperator,","highlight_start":29,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/expression.rs","byte_start":286,"byte_end":313,"line_start":8,"line_end":8,"column_start":16,"column_end":43,"is_primary":true,"text":[{"text":"    LiteralKind, Statement, TypeAnnotation, UnaryOperator,","highlight_start":16,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Statement` and `TypeAnnotation`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/expression.rs:8:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LiteralKind, Statement, TypeAnnotation, UnaryOperator,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Identifier` and `TypeAnnotation`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":225,"byte_end":235,"line_start":7,"line_end":7,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    EnumVariant, Identifier, Parameter, Statement, StatementKind,","highlight_start":18,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":304,"byte_end":318,"line_start":8,"line_end":8,"column_start":31,"column_end":45,"is_primary":true,"text":[{"text":"    StructField, TraitMethod, TypeAnnotation,","highlight_start":31,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":223,"byte_end":235,"line_start":7,"line_end":7,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"    EnumVariant, Identifier, Parameter, Statement, StatementKind,","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/declaration.rs","byte_start":302,"byte_end":318,"line_start":8,"line_end":8,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"    StructField, TraitMethod, TypeAnnotation,","highlight_start":29,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Identifier` and `TypeAnnotation`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/declaration.rs:7:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    EnumVariant, Identifier, Parameter, Statement, StatementKind,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    StructField, TraitMethod, TypeAnnotation,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Identifier`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/types.rs","byte_start":213,"byte_end":223,"line_start":6,"line_end":6,"column_start":28,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Identifier, TypeAnnotation};","highlight_start":28,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/types.rs","byte_start":213,"byte_end":225,"line_start":6,"line_end":6,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Identifier, TypeAnnotation};","highlight_start":28,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/types.rs","byte_start":212,"byte_end":213,"line_start":6,"line_end":6,"column_start":27,"column_end":28,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Identifier, TypeAnnotation};","highlight_start":27,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/parser/types.rs","byte_start":239,"byte_end":240,"line_start":6,"line_end":6,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Identifier, TypeAnnotation};","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Identifier`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/types.rs:6:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{Identifier, TypeAnnotation};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":303,"byte_end":311,"line_start":6,"line_end":6,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":0,"byte_end":313,"line_start":1,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"/// # 抽象構文木（AST）の定義","highlight_start":1,"highlight_end":20},{"text":"/// ","highlight_start":1,"highlight_end":5},{"text":"/// このモジュールはSwiftLight言語の抽象構文木を表現する構造体と列挙型を定義します。","highlight_start":1,"highlight_end":50},{"text":"/// ASTはパーサーによって生成され、型チェッカーや中間表現（IR）生成器によって使用されます。","highlight_start":1,"highlight_end":51},{"text":"","highlight_start":1,"highlight_end":1},{"text":"use std::fmt;","highlight_start":1,"highlight_end":14},{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/ast.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::rc::Rc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":317,"byte_end":328,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":313,"byte_end":330,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":17},{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::rc::Rc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/ast.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::rc::Rc;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":334,"byte_end":359,"line_start":8,"line_end":8,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/parser/ast.rs","byte_start":330,"byte_end":361,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/parser/ast.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Expression` and `Statement`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":284,"byte_end":294,"line_start":7,"line_end":7,"column_start":28,"column_end":38,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Expression, Program, Statement, NodeId};","highlight_start":28,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":305,"byte_end":314,"line_start":7,"line_end":7,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Expression, Program, Statement, NodeId};","highlight_start":49,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":284,"byte_end":296,"line_start":7,"line_end":7,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Expression, Program, Statement, NodeId};","highlight_start":28,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":303,"byte_end":314,"line_start":7,"line_end":7,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Expression, Program, Statement, NodeId};","highlight_start":47,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Expression` and `Statement`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/mod.rs:7:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{Expression, Program, Statement, NodeId};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `CompilerError` and `ErrorKind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":354,"byte_end":367,"line_start":8,"line_end":8,"column_start":30,"column_end":43,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":30,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":369,"byte_end":378,"line_start":8,"line_end":8,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":45,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":354,"byte_end":380,"line_start":8,"line_end":8,"column_start":30,"column_end":56,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":30,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `CompilerError` and `ErrorKind`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/mod.rs:8:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{CompilerError, ErrorKind, Result, Diagnostic};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::frontend::source_map::SourceMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":405,"byte_end":443,"line_start":9,"line_end":9,"column_start":5,"column_end":43,"is_primary":true,"text":[{"text":"use crate::frontend::source_map::SourceMap;","highlight_start":5,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/mod.rs","byte_start":401,"byte_end":445,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::frontend::source_map::SourceMap;","highlight_start":1,"highlight_end":44},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::frontend::source_map::SourceMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/mod.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::source_map::SourceMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `EnumVariant`, `Enum`, `Struct`, and `Trait`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":503,"byte_end":509,"line_start":12,"line_end":12,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"    Function, Struct, Enum, EnumVariant, Trait, Implementation,","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":511,"byte_end":515,"line_start":12,"line_end":12,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"    Function, Struct, Enum, EnumVariant, Trait, Implementation,","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":517,"byte_end":528,"line_start":12,"line_end":12,"column_start":29,"column_end":40,"is_primary":true,"text":[{"text":"    Function, Struct, Enum, EnumVariant, Trait, Implementation,","highlight_start":29,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":530,"byte_end":535,"line_start":12,"line_end":12,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"    Function, Struct, Enum, EnumVariant, Trait, Implementation,","highlight_start":42,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":501,"byte_end":535,"line_start":12,"line_end":12,"column_start":13,"column_end":47,"is_primary":true,"text":[{"text":"    Function, Struct, Enum, EnumVariant, Trait, Implementation,","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `EnumVariant`, `Enum`, `Struct`, and `Trait`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs:12:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Function, Struct, Enum, EnumVariant, Trait, Implementation,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BinaryOperator` and `ConstantDeclaration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":69207,"byte_end":69221,"line_start":1725,"line_end":1725,"column_start":15,"column_end":29,"is_primary":true,"text":[{"text":"        self, BinaryOperator, Expression, ExpressionKind, Identifier, Literal, LiteralKind, ","highlight_start":15,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":69389,"byte_end":69408,"line_start":1727,"line_end":1727,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        ConstantDeclaration, Function, Struct, StructField, TypeAnnotation, TypeKind","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":69205,"byte_end":69221,"line_start":1725,"line_end":1725,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"        self, BinaryOperator, Expression, ExpressionKind, Identifier, Literal, LiteralKind, ","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs","byte_start":69378,"byte_end":69408,"line_start":1726,"line_end":1727,"column_start":93,"column_end":28,"is_primary":true,"text":[{"text":"        Program, Statement, StatementKind, Declaration, DeclarationKind, VariableDeclaration, ","highlight_start":93,"highlight_end":95},{"text":"        ConstantDeclaration, Function, Struct, StructField, TypeAnnotation, TypeKind","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BinaryOperator` and `ConstantDeclaration`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/name_resolver.rs:1725:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1725\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self, BinaryOperator, Expression, ExpressionKind, Identifier, Literal, LiteralKind, \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1726\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Program, Statement, StatementKind, Declaration, DeclarationKind, VariableDeclaration, \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1727\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ConstantDeclaration, Function, Struct, StructField, TypeAnnotation, TypeKind\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":188,"byte_end":196,"line_start":4,"line_end":4,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":186,"byte_end":196,"line_start":4,"line_end":4,"column_start":40,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":40,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `VecDeque`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:4:42\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, VecDeque};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BinaryOperator`, `Import`, `Literal`, and `UnaryOperator`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":499,"byte_end":505,"line_start":9,"line_end":9,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, ","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":507,"byte_end":521,"line_start":9,"line_end":9,"column_start":29,"column_end":43,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, ","highlight_start":29,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":523,"byte_end":536,"line_start":9,"line_end":9,"column_start":45,"column_end":58,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, ","highlight_start":45,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":538,"byte_end":545,"line_start":9,"line_end":9,"column_start":60,"column_end":67,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, ","highlight_start":60,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":497,"byte_end":545,"line_start":9,"line_end":9,"column_start":19,"column_end":67,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, ","highlight_start":19,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BinaryOperator`, `Import`, `Literal`, and `UnaryOperator`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:9:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, \u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Pattern`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":663,"byte_end":670,"line_start":12,"line_end":12,"column_start":46,"column_end":53,"is_primary":true,"text":[{"text":"use crate::frontend::parser::ast::{MatchArm, Pattern}; // 正しいパスからMatchArmとPatternをインポート","highlight_start":46,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":661,"byte_end":670,"line_start":12,"line_end":12,"column_start":44,"column_end":53,"is_primary":true,"text":[{"text":"use crate::frontend::parser::ast::{MatchArm, Pattern}; // 正しいパスからMatchArmとPatternをインポート","highlight_start":44,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":652,"byte_end":653,"line_start":12,"line_end":12,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"use crate::frontend::parser::ast::{MatchArm, Pattern}; // 正しいパスからMatchArmとPatternをインポート","highlight_start":35,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":670,"byte_end":671,"line_start":12,"line_end":12,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::parser::ast::{MatchArm, Pattern}; // 正しいパスからMatchArmとPatternをインポート","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Pattern`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:12:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::parser::ast::{MatchArm, Pattern}; // 正しいパスからMatchArmとPatternをインポート\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::diagnostics::Diagnostic`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":807,"byte_end":837,"line_start":14,"line_end":14,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::diagnostics::Diagnostic; // 正しいパスからDiagnosticをインポート","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":803,"byte_end":838,"line_start":14,"line_end":14,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use crate::diagnostics::Diagnostic; // 正しいパスからDiagnosticをインポート","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::diagnostics::Diagnostic`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::diagnostics::Diagnostic; // 正しいパスからDiagnosticをインポート\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Symbol` and `Visibility`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":979,"byte_end":985,"line_start":16,"line_end":16,"column_start":40,"column_end":46,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":40,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":999,"byte_end":1009,"line_start":16,"line_end":16,"column_start":60,"column_end":70,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":60,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":977,"byte_end":985,"line_start":16,"line_end":16,"column_start":38,"column_end":46,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":38,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":997,"byte_end":1009,"line_start":16,"line_end":16,"column_start":58,"column_end":70,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":58,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Symbol` and `Visibility`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:16:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::scope::ScopeManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":1016,"byte_end":1042,"line_start":17,"line_end":17,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use super::scope::ScopeManager;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":1012,"byte_end":1044,"line_start":17,"line_end":18,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::scope::ScopeManager;","highlight_start":1,"highlight_end":32},{"text":"use crate::typesystem::TypeRegistry;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::scope::ScopeManager`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::scope::ScopeManager;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `StatementKind`, `Statement`, and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":103592,"byte_end":103596,"line_start":2425,"line_end":2425,"column_start":32,"column_end":36,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{self, Statement, StatementKind};","highlight_start":32,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":103598,"byte_end":103607,"line_start":2425,"line_end":2425,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{self, Statement, StatementKind};","highlight_start":38,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":103609,"byte_end":103622,"line_start":2425,"line_end":2425,"column_start":49,"column_end":62,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{self, Statement, StatementKind};","highlight_start":49,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/type_checker.rs","byte_start":103565,"byte_end":103624,"line_start":2425,"line_end":2425,"column_start":5,"column_end":64,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{self, Statement, StatementKind};","highlight_start":5,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `StatementKind`, `Statement`, and `self`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/type_checker.rs:2425:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::frontend::ast::{self, Statement, StatementKind};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::symbol_table::SymbolTable`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":727,"byte_end":759,"line_start":16,"line_end":16,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use super::symbol_table::SymbolTable;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":723,"byte_end":761,"line_start":16,"line_end":17,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::symbol_table::SymbolTable;","highlight_start":1,"highlight_end":38},{"text":"use super::type_checker::TypeCheckResult;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::symbol_table::SymbolTable`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::symbol_table::SymbolTable;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `DeclarationKind`, `Declaration`, `ExpressionKind`, `Expression`, `StatementKind`, and `Statement`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":56999,"byte_end":57009,"line_start":1336,"line_end":1336,"column_start":32,"column_end":42,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":32,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":57011,"byte_end":57025,"line_start":1336,"line_end":1336,"column_start":44,"column_end":58,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":44,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":57027,"byte_end":57036,"line_start":1336,"line_end":1336,"column_start":60,"column_end":69,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":60,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":57038,"byte_end":57051,"line_start":1336,"line_end":1336,"column_start":71,"column_end":84,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":71,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":57053,"byte_end":57064,"line_start":1336,"line_end":1336,"column_start":86,"column_end":97,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":86,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":57066,"byte_end":57081,"line_start":1336,"line_end":1336,"column_start":99,"column_end":114,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":99,"highlight_end":114}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs","byte_start":56972,"byte_end":57083,"line_start":1336,"line_end":1336,"column_start":5,"column_end":116,"is_primary":true,"text":[{"text":"    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};","highlight_start":5,"highlight_end":116}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `DeclarationKind`, `Declaration`, `ExpressionKind`, `Expression`, `StatementKind`, and `Statement`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/ownership_checker.rs:1336:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::frontend::ast::{Expression, ExpressionKind, Statement, StatementKind, Declaration, DeclarationKind};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":535,"byte_end":557,"line_start":11,"line_end":11,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"#[cfg(feature = \"smt_solver\")]","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":535,"byte_end":557,"line_start":11,"line_end":11,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"#[cfg(feature = \"smt_solver\")]","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:11:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":583,"byte_end":605,"line_start":13,"line_end":13,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"#[cfg(feature = \"smt_solver\")]","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":583,"byte_end":605,"line_start":13,"line_end":13,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"#[cfg(feature = \"smt_solver\")]","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:13:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `HashSet` and `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":454,"byte_end":461,"line_start":7,"line_end":7,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":463,"byte_end":471,"line_start":7,"line_end":7,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":452,"byte_end":471,"line_start":7,"line_end":7,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":444,"byte_end":445,"line_start":7,"line_end":7,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":471,"byte_end":472,"line_start":7,"line_end":7,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `HashSet` and `VecDeque`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:7:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, VecDeque};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":478,"byte_end":492,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":474,"byte_end":494,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ConstantDeclaration`, `DeclarationKind`, `Declaration`, `Enum`, `Identifier`, `Implementation`, `Import`, `LiteralKind`, `MatchArm`, `Parameter`, `Statement`, `Struct`, `Trait`, `TypeKind`, `VariableDeclaration`, and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":733,"byte_end":737,"line_start":20,"line_end":20,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":748,"byte_end":759,"line_start":20,"line_end":20,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":761,"byte_end":770,"line_start":20,"line_end":20,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":800,"byte_end":808,"line_start":20,"line_end":20,"column_start":72,"column_end":80,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":72,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":853,"byte_end":868,"line_start":21,"line_end":21,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"    NodeId, ExpressionKind, StatementKind, DeclarationKind, Identifier, Function,","highlight_start":44,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":870,"byte_end":880,"line_start":21,"line_end":21,"column_start":61,"column_end":71,"is_primary":true,"text":[{"text":"    NodeId, ExpressionKind, StatementKind, DeclarationKind, Identifier, Function,","highlight_start":61,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":896,"byte_end":915,"line_start":22,"line_end":22,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":917,"byte_end":936,"line_start":22,"line_end":22,"column_start":26,"column_end":45,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":26,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":938,"byte_end":947,"line_start":22,"line_end":22,"column_start":47,"column_end":56,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":47,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":949,"byte_end":955,"line_start":22,"line_end":22,"column_start":58,"column_end":64,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":58,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":957,"byte_end":961,"line_start":22,"line_end":22,"column_start":66,"column_end":70,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":66,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":963,"byte_end":968,"line_start":22,"line_end":22,"column_start":72,"column_end":77,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":72,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":985,"byte_end":999,"line_start":23,"line_end":23,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1001,"byte_end":1007,"line_start":23,"line_end":23,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1049,"byte_end":1060,"line_start":23,"line_end":23,"column_start":69,"column_end":80,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,","highlight_start":69,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1062,"byte_end":1070,"line_start":23,"line_end":23,"column_start":82,"column_end":90,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,","highlight_start":82,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":733,"byte_end":739,"line_start":20,"line_end":20,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":746,"byte_end":770,"line_start":20,"line_end":20,"column_start":18,"column_end":42,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":18,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":798,"byte_end":808,"line_start":20,"line_end":20,"column_start":70,"column_end":80,"is_primary":true,"text":[{"text":"    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,","highlight_start":70,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":851,"byte_end":880,"line_start":21,"line_end":21,"column_start":42,"column_end":71,"is_primary":true,"text":[{"text":"    NodeId, ExpressionKind, StatementKind, DeclarationKind, Identifier, Function,","highlight_start":42,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":890,"byte_end":968,"line_start":21,"line_end":22,"column_start":81,"column_end":77,"is_primary":true,"text":[{"text":"    NodeId, ExpressionKind, StatementKind, DeclarationKind, Identifier, Function,","highlight_start":81,"highlight_end":82},{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":979,"byte_end":1007,"line_start":22,"line_end":23,"column_start":88,"column_end":27,"is_primary":true,"text":[{"text":"    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,","highlight_start":88,"highlight_end":89},{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1047,"byte_end":1070,"line_start":23,"line_end":23,"column_start":67,"column_end":90,"is_primary":true,"text":[{"text":"    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,","highlight_start":67,"highlight_end":90}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ConstantDeclaration`, `DeclarationKind`, `Declaration`, `Enum`, `Identifier`, `Implementation`, `Import`, `LiteralKind`, `MatchArm`, `Parameter`, `Statement`, `Struct`, `Trait`, `TypeKind`, `VariableDeclaration`, and `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self, Program, Declaration, Statement, Expression, TypeAnnotation, TypeKind,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NodeId, ExpressionKind, StatementKind, DeclarationKind, Identifier, Function,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VariableDeclaration, ConstantDeclaration, Parameter, Struct, Enum, Trait, TypeAlias,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Implementation, Import, BinaryOperator, UnaryOperator, Literal, LiteralKind, MatchArm,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::name_resolver::NameResolutionResult`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1181,"byte_end":1223,"line_start":26,"line_end":26,"column_start":5,"column_end":47,"is_primary":true,"text":[{"text":"use super::name_resolver::NameResolutionResult;","highlight_start":5,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1177,"byte_end":1225,"line_start":26,"line_end":27,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::name_resolver::NameResolutionResult;","highlight_start":1,"highlight_end":48},{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::name_resolver::NameResolutionResult`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::name_resolver::NameResolutionResult;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `SymbolKind`, `SymbolTable`, `Symbol`, and `Visibility`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1251,"byte_end":1262,"line_start":27,"line_end":27,"column_start":27,"column_end":38,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":27,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1264,"byte_end":1270,"line_start":27,"line_end":27,"column_start":40,"column_end":46,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":40,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1272,"byte_end":1282,"line_start":27,"line_end":27,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":48,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1284,"byte_end":1294,"line_start":27,"line_end":27,"column_start":60,"column_end":70,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":60,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1225,"byte_end":1297,"line_start":27,"line_end":28,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":1,"highlight_end":72},{"text":"use super::scope::ScopeManager;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `SymbolKind`, `SymbolTable`, `Symbol`, and `Visibility`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:27:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::scope::ScopeManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1301,"byte_end":1327,"line_start":28,"line_end":28,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use super::scope::ScopeManager;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1297,"byte_end":1329,"line_start":28,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::scope::ScopeManager;","highlight_start":1,"highlight_end":32},{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::scope::ScopeManager`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:28:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::scope::ScopeManager;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `TypeCheckResult`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1355,"byte_end":1370,"line_start":29,"line_end":29,"column_start":27,"column_end":42,"is_primary":true,"text":[{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":27,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1355,"byte_end":1372,"line_start":29,"line_end":29,"column_start":27,"column_end":44,"is_primary":true,"text":[{"text":"use super::type_checker::{TypeCheckResult, Type, Environment, Value};","highlight_start":27,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `TypeCheckResult`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:29:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::type_checker::{TypeCheckResult, Type, Environment, Value};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::type_checker::TypeCheckResult`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1403,"byte_end":1439,"line_start":30,"line_end":30,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use super::type_checker::TypeCheckResult;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":1399,"byte_end":1441,"line_start":30,"line_end":31,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::type_checker::TypeCheckResult;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::type_checker::TypeCheckResult`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::type_checker::TypeCheckResult;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":4923,"byte_end":4945,"line_start":176,"line_end":176,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":4923,"byte_end":4945,"line_start":176,"line_end":176,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:176:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5267,"byte_end":5289,"line_start":190,"line_end":190,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5267,"byte_end":5289,"line_start":190,"line_end":190,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:190:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5462,"byte_end":5484,"line_start":196,"line_end":196,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5462,"byte_end":5484,"line_start":196,"line_end":196,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:196:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5805,"byte_end":5827,"line_start":207,"line_end":207,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5805,"byte_end":5827,"line_start":207,"line_end":207,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:207:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5984,"byte_end":6006,"line_start":213,"line_end":213,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":5984,"byte_end":6006,"line_start":213,"line_end":213,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:213:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":9816,"byte_end":9838,"line_start":289,"line_end":289,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":9816,"byte_end":9838,"line_start":289,"line_end":289,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:289:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":10192,"byte_end":10214,"line_start":298,"line_end":298,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":10192,"byte_end":10214,"line_start":298,"line_end":298,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:298:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":10580,"byte_end":10602,"line_start":310,"line_end":310,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":10580,"byte_end":10602,"line_start":310,"line_end":310,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:310:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":10864,"byte_end":10886,"line_start":317,"line_end":317,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":10864,"byte_end":10886,"line_start":317,"line_end":317,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:317:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":11587,"byte_end":11609,"line_start":337,"line_end":337,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":11587,"byte_end":11609,"line_start":337,"line_end":337,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:337:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":11770,"byte_end":11792,"line_start":343,"line_end":343,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":11770,"byte_end":11792,"line_start":343,"line_end":343,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:343:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":12179,"byte_end":12201,"line_start":356,"line_end":356,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":12179,"byte_end":12201,"line_start":356,"line_end":356,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:356:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":12891,"byte_end":12913,"line_start":375,"line_end":375,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":12891,"byte_end":12913,"line_start":375,"line_end":375,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:375:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":13066,"byte_end":13088,"line_start":381,"line_end":381,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":13066,"byte_end":13088,"line_start":381,"line_end":381,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"smt_solver\")]","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:381:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":13206,"byte_end":13228,"line_start":387,"line_end":387,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":13206,"byte_end":13228,"line_start":387,"line_end":387,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"smt_solver\"))]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:387:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m387\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":17838,"byte_end":17860,"line_start":513,"line_end":513,"column_start":23,"column_end":45,"is_primary":true,"text":[{"text":"                #[cfg(feature = \"smt_solver\")]","highlight_start":23,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":17838,"byte_end":17860,"line_start":513,"line_end":513,"column_start":23,"column_end":45,"is_primary":true,"text":[{"text":"                #[cfg(feature = \"smt_solver\")]","highlight_start":23,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:513:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":19542,"byte_end":19564,"line_start":545,"line_end":545,"column_start":27,"column_end":49,"is_primary":true,"text":[{"text":"                #[cfg(not(feature = \"smt_solver\"))]","highlight_start":27,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":19542,"byte_end":19564,"line_start":545,"line_end":545,"column_start":27,"column_end":49,"is_primary":true,"text":[{"text":"                #[cfg(not(feature = \"smt_solver\"))]","highlight_start":27,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:545:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m545\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":54750,"byte_end":54772,"line_start":1298,"line_end":1298,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"        #[cfg(feature = \"smt_solver\")]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":54750,"byte_end":54772,"line_start":1298,"line_end":1298,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"        #[cfg(feature = \"smt_solver\")]","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:1298:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(feature = \"smt_solver\")]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `smt_solver`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":55180,"byte_end":55202,"line_start":1310,"line_end":1310,"column_start":19,"column_end":41,"is_primary":true,"text":[{"text":"        #[cfg(not(feature = \"smt_solver\"))]","highlight_start":19,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `smt_solver` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the condition","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":55180,"byte_end":55202,"line_start":1310,"line_end":1310,"column_start":19,"column_end":41,"is_primary":true,"text":[{"text":"        #[cfg(not(feature = \"smt_solver\"))]","highlight_start":19,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `smt_solver`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:1310:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(feature = \"smt_solver\"))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the condition\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `smt_solver` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":68502,"byte_end":68510,"line_start":1595,"line_end":1595,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs","byte_start":68498,"byte_end":68511,"line_start":1595,"line_end":1595,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::*`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/dependent_type_checker.rs:1595:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1595\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::symbol_table::SymbolTable`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/analyzer.rs","byte_start":391,"byte_end":423,"line_start":9,"line_end":9,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use super::symbol_table::SymbolTable;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/analyzer.rs","byte_start":387,"byte_end":425,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::symbol_table::SymbolTable;","highlight_start":1,"highlight_end":38},{"text":"use super::scope::{ScopeManager, ScopeKind};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::symbol_table::SymbolTable`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/analyzer.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::symbol_table::SymbolTable;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ScopeKind` and `ScopeManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/analyzer.rs","byte_start":444,"byte_end":456,"line_start":10,"line_end":10,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"use super::scope::{ScopeManager, ScopeKind};","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/analyzer.rs","byte_start":458,"byte_end":467,"line_start":10,"line_end":10,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"use super::scope::{ScopeManager, ScopeKind};","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/analyzer.rs","byte_start":425,"byte_end":470,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::scope::{ScopeManager, ScopeKind};","highlight_start":1,"highlight_end":45},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ScopeKind` and `ScopeManager`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/analyzer.rs:10:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::scope::{ScopeManager, ScopeKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `HashSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":204,"byte_end":211,"line_start":6,"line_end":6,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":202,"byte_end":211,"line_start":6,"line_end":6,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":31,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":194,"byte_end":195,"line_start":6,"line_end":6,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":211,"byte_end":212,"line_start":6,"line_end":6,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `HashSet`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/scope.rs:6:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `SymbolKind` and `Visibility`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":364,"byte_end":374,"line_start":9,"line_end":9,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":48,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":376,"byte_end":386,"line_start":9,"line_end":9,"column_start":60,"column_end":70,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":60,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/scope.rs","byte_start":362,"byte_end":386,"line_start":9,"line_end":9,"column_start":46,"column_end":70,"is_primary":true,"text":[{"text":"use super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};","highlight_start":46,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `SymbolKind` and `Visibility`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/scope.rs:9:48\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::symbol_table::{SymbolTable, Symbol, SymbolKind, Visibility};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":242,"byte_end":256,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":238,"byte_end":258,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ExpressionKind`, `Expression`, `Identifier`, `Parameter`, `StatementKind`, and `Statement`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":291,"byte_end":301,"line_start":11,"line_end":11,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    Expression, ExpressionKind, Identifier, NodeId,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":303,"byte_end":317,"line_start":11,"line_end":11,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"    Expression, ExpressionKind, Identifier, NodeId,","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":319,"byte_end":329,"line_start":11,"line_end":11,"column_start":33,"column_end":43,"is_primary":true,"text":[{"text":"    Expression, ExpressionKind, Identifier, NodeId,","highlight_start":33,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":343,"byte_end":352,"line_start":12,"line_end":12,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    Parameter, Statement, StatementKind, TypeAnnotation,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":354,"byte_end":363,"line_start":12,"line_end":12,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"    Parameter, Statement, StatementKind, TypeAnnotation,","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":365,"byte_end":378,"line_start":12,"line_end":12,"column_start":27,"column_end":40,"is_primary":true,"text":[{"text":"    Parameter, Statement, StatementKind, TypeAnnotation,","highlight_start":27,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":291,"byte_end":331,"line_start":11,"line_end":11,"column_start":5,"column_end":45,"is_primary":true,"text":[{"text":"    Expression, ExpressionKind, Identifier, NodeId,","highlight_start":5,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":337,"byte_end":378,"line_start":11,"line_end":12,"column_start":51,"column_end":40,"is_primary":true,"text":[{"text":"    Expression, ExpressionKind, Identifier, NodeId,","highlight_start":51,"highlight_end":52},{"text":"    Parameter, Statement, StatementKind, TypeAnnotation,","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ExpressionKind`, `Expression`, `Identifier`, `Parameter`, `StatementKind`, and `Statement`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Expression, ExpressionKind, Identifier, NodeId,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Parameter, Statement, StatementKind, TypeAnnotation,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ErrorKind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":459,"byte_end":468,"line_start":14,"line_end":14,"column_start":61,"column_end":70,"is_primary":true,"text":[{"text":"use crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":61,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs","byte_start":457,"byte_end":468,"line_start":14,"line_end":14,"column_start":59,"column_end":70,"is_primary":true,"text":[{"text":"use crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result, Diagnostic};","highlight_start":59,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ErrorKind`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/semantic/symbol_table.rs:14:61\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{SourceLocation, CompilerError, ErrorKind, Result, Diagnostic};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":534,"byte_end":548,"line_start":13,"line_end":13,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":530,"byte_end":550,"line_start":13,"line_end":14,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":554,"byte_end":579,"line_start":14,"line_end":14,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/error.rs","byte_start":550,"byte_end":581,"line_start":14,"line_end":15,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"use colored::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/error.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/source_map.rs","byte_start":264,"byte_end":272,"line_start":8,"line_end":8,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/source_map.rs","byte_start":260,"byte_end":274,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14},{"text":"use std::fs;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/source_map.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Identifier`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/module.rs","byte_start":355,"byte_end":365,"line_start":8,"line_end":8,"column_start":41,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Declaration, Identifier};","highlight_start":41,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/frontend/module.rs","byte_start":353,"byte_end":365,"line_start":8,"line_end":8,"column_start":39,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Declaration, Identifier};","highlight_start":39,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/module.rs","byte_start":341,"byte_end":342,"line_start":8,"line_end":8,"column_start":27,"column_end":28,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Declaration, Identifier};","highlight_start":27,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/frontend/module.rs","byte_start":365,"byte_end":366,"line_start":8,"line_end":8,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{Declaration, Identifier};","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Identifier`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/frontend/module.rs:8:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{Declaration, Identifier};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BTreeMap` and `BTreeSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":391,"byte_end":399,"line_start":7,"line_end":7,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":401,"byte_end":409,"line_start":7,"line_end":7,"column_start":52,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":52,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":389,"byte_end":409,"line_start":7,"line_end":7,"column_start":40,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":40,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BTreeMap` and `BTreeSet`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/representation.rs:7:42\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":430,"byte_end":444,"line_start":9,"line_end":9,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":426,"byte_end":446,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/representation.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::rc::Rc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":450,"byte_end":461,"line_start":10,"line_end":10,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":446,"byte_end":463,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":17},{"text":"use std::cell::{Cell, RefCell};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::rc::Rc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/representation.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::rc::Rc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Cell` and `RefCell`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":479,"byte_end":483,"line_start":11,"line_end":11,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"use std::cell::{Cell, RefCell};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":485,"byte_end":492,"line_start":11,"line_end":11,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"use std::cell::{Cell, RefCell};","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":463,"byte_end":495,"line_start":11,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::cell::{Cell, RefCell};","highlight_start":1,"highlight_end":32},{"text":"use std::path::PathBuf;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Cell` and `RefCell`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/representation.rs:11:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::cell::{Cell, RefCell};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::path::PathBuf`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":499,"byte_end":517,"line_start":12,"line_end":12,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::path::PathBuf;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/representation.rs","byte_start":495,"byte_end":519,"line_start":12,"line_end":13,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::path::PathBuf;","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::PathBuf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/representation.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::PathBuf;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `HashSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":252,"byte_end":259,"line_start":8,"line_end":8,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":250,"byte_end":259,"line_start":8,"line_end":8,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":31,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":242,"byte_end":243,"line_start":8,"line_end":8,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":259,"byte_end":260,"line_start":8,"line_end":8,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `HashSet`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:8:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":266,"byte_end":280,"line_start":9,"line_end":9,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":262,"byte_end":282,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use inkwell::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `AnyValueEnum`, `FloatValue`, and `FunctionType`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":433,"byte_end":445,"line_start":14,"line_end":14,"column_start":59,"column_end":71,"is_primary":true,"text":[{"text":"    values::{FunctionValue, BasicValueEnum, PointerValue, AnyValueEnum, IntValue, FloatValue, BasicValue},","highlight_start":59,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":457,"byte_end":467,"line_start":14,"line_end":14,"column_start":83,"column_end":93,"is_primary":true,"text":[{"text":"    values::{FunctionValue, BasicValueEnum, PointerValue, AnyValueEnum, IntValue, FloatValue, BasicValue},","highlight_start":83,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":545,"byte_end":557,"line_start":15,"line_end":15,"column_start":64,"column_end":76,"is_primary":true,"text":[{"text":"    types::{BasicTypeEnum, BasicType, AnyTypeEnum, StructType, FunctionType},","highlight_start":64,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":431,"byte_end":445,"line_start":14,"line_end":14,"column_start":57,"column_end":71,"is_primary":true,"text":[{"text":"    values::{FunctionValue, BasicValueEnum, PointerValue, AnyValueEnum, IntValue, FloatValue, BasicValue},","highlight_start":57,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":455,"byte_end":467,"line_start":14,"line_end":14,"column_start":81,"column_end":93,"is_primary":true,"text":[{"text":"    values::{FunctionValue, BasicValueEnum, PointerValue, AnyValueEnum, IntValue, FloatValue, BasicValue},","highlight_start":81,"highlight_end":93}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":543,"byte_end":557,"line_start":15,"line_end":15,"column_start":62,"column_end":76,"is_primary":true,"text":[{"text":"    types::{BasicTypeEnum, BasicType, AnyTypeEnum, StructType, FunctionType},","highlight_start":62,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AnyValueEnum`, `FloatValue`, and `FunctionType`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:14:59\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    values::{FunctionValue, BasicValueEnum, PointerValue, AnyValueEnum, IntValue, FloatValue, BasicValue},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    types::{BasicTypeEnum, BasicType, AnyTypeEnum, StructType, FunctionType},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `inkwell::values::BasicMetadataValueEnum`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":632,"byte_end":671,"line_start":19,"line_end":19,"column_start":5,"column_end":44,"is_primary":true,"text":[{"text":"use inkwell::values::BasicMetadataValueEnum;","highlight_start":5,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":628,"byte_end":673,"line_start":19,"line_end":20,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use inkwell::values::BasicMetadataValueEnum;","highlight_start":1,"highlight_end":45},{"text":"use crate::frontend::ast::{self, Program, Declaration, Statement, Expression, NodeId, TypeAnnotation, TypeKind};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `inkwell::values::BasicMetadataValueEnum`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse inkwell::values::BasicMetadataValueEnum;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Function`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":1316,"byte_end":1324,"line_start":28,"line_end":28,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"pub use representation::{Module, Function, BasicBlock, Instruction, Value, Type, Operand, OpCode};","highlight_start":34,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/ir/mod.rs","byte_start":1314,"byte_end":1324,"line_start":28,"line_end":28,"column_start":32,"column_end":42,"is_primary":true,"text":[{"text":"pub use representation::{Module, Function, BasicBlock, Instruction, Value, Type, Operand, OpCode};","highlight_start":32,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Function`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/ir/mod.rs:28:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use representation::{Module, Function, BasicBlock, Instruction, Value, Type, Operand, OpCode};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":478,"byte_end":486,"line_start":11,"line_end":11,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":476,"byte_end":486,"line_start":11,"line_end":11,"column_start":40,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":40,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `VecDeque`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/dataflow.rs:11:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, VecDeque};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BasicBlock`, `Module`, and `Type`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":536,"byte_end":546,"line_start":15,"line_end":15,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":571,"byte_end":577,"line_start":15,"line_end":15,"column_start":40,"column_end":46,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":40,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":600,"byte_end":604,"line_start":16,"line_end":16,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":536,"byte_end":548,"line_start":15,"line_end":15,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":569,"byte_end":577,"line_start":15,"line_end":15,"column_start":38,"column_end":46,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":38,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/dataflow.rs","byte_start":593,"byte_end":604,"line_start":15,"line_end":16,"column_start":62,"column_end":9,"is_primary":true,"text":[{"text":"    BasicBlock, Function, Instruction, Module, Value, ValueId, ","highlight_start":62,"highlight_end":64},{"text":"    Type, TypeId, ControlFlowGraph, InstructionId","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BasicBlock`, `Module`, and `Type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/dataflow.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    BasicBlock, Function, Instruction, Module, Value, ValueId, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Type, TypeId, ControlFlowGraph, InstructionId\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Instruction` and `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":600,"byte_end":611,"line_start":20,"line_end":20,"column_start":58,"column_end":69,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};","highlight_start":58,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":621,"byte_end":626,"line_start":20,"line_end":20,"column_start":79,"column_end":84,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};","highlight_start":79,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":598,"byte_end":611,"line_start":20,"line_end":20,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":619,"byte_end":626,"line_start":20,"line_end":20,"column_start":77,"column_end":84,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};","highlight_start":77,"highlight_end":84}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Instruction` and `Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/mod.rs:20:58\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, OpCode, Value, Operand};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Module` and `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":32763,"byte_end":32769,"line_start":756,"line_end":756,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":32820,"byte_end":32825,"line_start":756,"line_end":756,"column_start":66,"column_end":71,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":66,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":32763,"byte_end":32771,"line_start":756,"line_end":756,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/analysis/mod.rs","byte_start":32818,"byte_end":32825,"line_start":756,"line_end":756,"column_start":64,"column_end":71,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":64,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Module` and `Value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/analysis/mod.rs:756:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CompilerError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":422,"byte_end":435,"line_start":13,"line_end":13,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":420,"byte_end":435,"line_start":13,"line_end":13,"column_start":36,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":36,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":413,"byte_end":414,"line_start":13,"line_end":13,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":435,"byte_end":436,"line_start":13,"line_end":13,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `CompilerError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:13:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompilerError};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Type`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7527,"byte_end":7531,"line_start":220,"line_end":220,"column_start":82,"column_end":86,"is_primary":true,"text":[{"text":"    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};","highlight_start":82,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":7525,"byte_end":7531,"line_start":220,"line_end":220,"column_start":80,"column_end":86,"is_primary":true,"text":[{"text":"    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};","highlight_start":80,"highlight_end":86}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Type`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:220:82\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::middleend::ir::{Module, Function, Instruction, BasicBlock, Value, Type, BinaryOp};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BasicBlock`, `Instruction`, `Module`, `OpCode`, `Operand`, `Type`, and `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65452,"byte_end":65458,"line_start":1529,"line_end":1529,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65470,"byte_end":65480,"line_start":1529,"line_end":1529,"column_start":27,"column_end":37,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":27,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65482,"byte_end":65493,"line_start":1529,"line_end":1529,"column_start":39,"column_end":50,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":39,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65495,"byte_end":65501,"line_start":1529,"line_end":1529,"column_start":52,"column_end":58,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":52,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65503,"byte_end":65507,"line_start":1529,"line_end":1529,"column_start":60,"column_end":64,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":60,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65509,"byte_end":65514,"line_start":1529,"line_end":1529,"column_start":66,"column_end":71,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":66,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65516,"byte_end":65523,"line_start":1529,"line_end":1529,"column_start":73,"column_end":80,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":73,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65452,"byte_end":65460,"line_start":1529,"line_end":1529,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65468,"byte_end":65523,"line_start":1529,"line_end":1529,"column_start":25,"column_end":80,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":25,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65442,"byte_end":65452,"line_start":1528,"line_end":1529,"column_start":31,"column_end":9,"is_primary":true,"text":[{"text":"    use crate::middleend::ir::{","highlight_start":31,"highlight_end":32},{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/optimization/mod.rs","byte_start":65523,"byte_end":65529,"line_start":1529,"line_end":1530,"column_start":80,"column_end":6,"is_primary":true,"text":[{"text":"        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand","highlight_start":80,"highlight_end":80},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BasicBlock`, `Instruction`, `Module`, `OpCode`, `Operand`, `Type`, and `Value`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/optimization/mod.rs:1529:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Module, Function, BasicBlock, Instruction, OpCode, Type, Value, Operand\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CompilerError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/mod.rs","byte_start":469,"byte_end":482,"line_start":15,"line_end":15,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/middleend/mod.rs","byte_start":467,"byte_end":482,"line_start":15,"line_end":15,"column_start":36,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":36,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/mod.rs","byte_start":460,"byte_end":461,"line_start":15,"line_end":15,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/middleend/mod.rs","byte_start":482,"byte_end":483,"line_start":15,"line_end":15,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `CompilerError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/middleend/mod.rs:15:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompilerError};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::io`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/mod.rs","byte_start":454,"byte_end":461,"line_start":9,"line_end":9,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use std::io;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/mod.rs","byte_start":450,"byte_end":463,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::io;","highlight_start":1,"highlight_end":13},{"text":"use std::sync::{Arc, Mutex};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/mod.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `inkwell::module::Module`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/llvm/mod.rs","byte_start":263,"byte_end":286,"line_start":9,"line_end":9,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use inkwell::module::Module;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/llvm/mod.rs","byte_start":259,"byte_end":288,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use inkwell::module::Module;","highlight_start":1,"highlight_end":29},{"text":"use inkwell::targets::{","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `inkwell::module::Module`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/llvm/mod.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse inkwell::module::Module;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `FloatType`, `FunctionType`, `IntType`, `PointerType`, and `StructType`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":465,"byte_end":477,"line_start":14,"line_end":14,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"    AnyTypeEnum, BasicTypeEnum, FunctionType, StructType, ","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":479,"byte_end":489,"line_start":14,"line_end":14,"column_start":47,"column_end":57,"is_primary":true,"text":[{"text":"    AnyTypeEnum, BasicTypeEnum, FunctionType, StructType, ","highlight_start":47,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":496,"byte_end":503,"line_start":15,"line_end":15,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    IntType, FloatType, PointerType","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":505,"byte_end":514,"line_start":15,"line_end":15,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"    IntType, FloatType, PointerType","highlight_start":14,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":516,"byte_end":527,"line_start":15,"line_end":15,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"    IntType, FloatType, PointerType","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":463,"byte_end":527,"line_start":14,"line_end":15,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"    AnyTypeEnum, BasicTypeEnum, FunctionType, StructType, ","highlight_start":31,"highlight_end":59},{"text":"    IntType, FloatType, PointerType","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `FloatType`, `FunctionType`, `IntType`, `PointerType`, and `StructType`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/llvm/codegen.rs:14:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AnyTypeEnum, BasicTypeEnum, FunctionType, StructType, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IntType, FloatType, PointerType\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::middleend::ir::Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":788,"byte_end":815,"line_start":24,"line_end":24,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"use crate::middleend::ir::Value;","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/llvm/codegen.rs","byte_start":784,"byte_end":817,"line_start":24,"line_end":25,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::middleend::ir::Value;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::middleend::ir::Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/llvm/codegen.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::Value;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Module`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":372,"byte_end":378,"line_start":10,"line_end":10,"column_start":58,"column_end":64,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Value, Instruction, Function, Module, Type};","highlight_start":58,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":370,"byte_end":378,"line_start":10,"line_end":10,"column_start":56,"column_end":64,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Value, Instruction, Function, Module, Type};","highlight_start":56,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Module`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:10:58\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Value, Instruction, Function, Module, Type};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BinaryOperator`, `ExpressionKind`, and `UnaryOperator`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":414,"byte_end":428,"line_start":11,"line_end":11,"column_start":28,"column_end":42,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{BinaryOperator, UnaryOperator, ExpressionKind};","highlight_start":28,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":430,"byte_end":443,"line_start":11,"line_end":11,"column_start":44,"column_end":57,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{BinaryOperator, UnaryOperator, ExpressionKind};","highlight_start":44,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":445,"byte_end":459,"line_start":11,"line_end":11,"column_start":59,"column_end":73,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{BinaryOperator, UnaryOperator, ExpressionKind};","highlight_start":59,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/wasm/codegen.rs","byte_start":387,"byte_end":462,"line_start":11,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::frontend::ast::{BinaryOperator, UnaryOperator, ExpressionKind};","highlight_start":1,"highlight_end":75},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BinaryOperator`, `ExpressionKind`, and `UnaryOperator`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/wasm/codegen.rs:11:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast::{BinaryOperator, UnaryOperator, ExpressionKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused macro definition: `emit_instruction`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/x86.rs","byte_start":5715,"byte_end":5731,"line_start":188,"line_end":188,"column_start":14,"column_end":30,"is_primary":true,"text":[{"text":"macro_rules! emit_instruction {","highlight_start":14,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused macro definition: `emit_instruction`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/x86.rs:188:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! emit_instruction {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Module`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":431,"byte_end":437,"line_start":10,"line_end":10,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{Module, Instruction, Type, BasicBlock};","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":431,"byte_end":439,"line_start":10,"line_end":10,"column_start":44,"column_end":52,"is_primary":true,"text":[{"text":"use crate::middleend::ir::representation::{Module, Instruction, Type, BasicBlock};","highlight_start":44,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Module`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/arm64.rs:10:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::representation::{Module, Instruction, Type, BasicBlock};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CompilerError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":590,"byte_end":603,"line_start":12,"line_end":12,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":588,"byte_end":603,"line_start":12,"line_end":12,"column_start":36,"column_end":51,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":36,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":581,"byte_end":582,"line_start":12,"line_end":12,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/arm64.rs","byte_start":603,"byte_end":604,"line_start":12,"line_end":12,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompilerError};","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `CompilerError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/arm64.rs:12:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompilerError};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BasicBlock` and `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":653,"byte_end":663,"line_start":12,"line_end":12,"column_start":49,"column_end":59,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Instruction, BasicBlock, Type, Value};","highlight_start":49,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":671,"byte_end":676,"line_start":12,"line_end":12,"column_start":67,"column_end":72,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Instruction, BasicBlock, Type, Value};","highlight_start":67,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":651,"byte_end":663,"line_start":12,"line_end":12,"column_start":47,"column_end":59,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Instruction, BasicBlock, Type, Value};","highlight_start":47,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":669,"byte_end":676,"line_start":12,"line_end":12,"column_start":65,"column_end":72,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Instruction, BasicBlock, Type, Value};","highlight_start":65,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BasicBlock` and `Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/riscv.rs:12:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Instruction, BasicBlock, Type, Value};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `RegisterClass`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":728,"byte_end":741,"line_start":13,"line_end":13,"column_start":50,"column_end":63,"is_primary":true,"text":[{"text":"use crate::backend::native::x86_64::{TargetInfo, RegisterClass};","highlight_start":50,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":726,"byte_end":741,"line_start":13,"line_end":13,"column_start":48,"column_end":63,"is_primary":true,"text":[{"text":"use crate::backend::native::x86_64::{TargetInfo, RegisterClass};","highlight_start":48,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":715,"byte_end":716,"line_start":13,"line_end":13,"column_start":37,"column_end":38,"is_primary":true,"text":[{"text":"use crate::backend::native::x86_64::{TargetInfo, RegisterClass};","highlight_start":37,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/native/riscv.rs","byte_start":741,"byte_end":742,"line_start":13,"line_end":13,"column_start":63,"column_end":64,"is_primary":true,"text":[{"text":"use crate::backend::native::x86_64::{TargetInfo, RegisterClass};","highlight_start":63,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `RegisterClass`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/native/riscv.rs:13:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::backend::native::x86_64::{TargetInfo, RegisterClass};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `trace`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":389,"byte_end":394,"line_start":8,"line_end":8,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"use log::{debug, info, trace, warn};","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":387,"byte_end":394,"line_start":8,"line_end":8,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"use log::{debug, info, trace, warn};","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `trace`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:8:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse log::{debug, info, trace, warn};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BasicBlock`, `Instruction`, `Type`, and `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":449,"byte_end":459,"line_start":10,"line_end":10,"column_start":46,"column_end":56,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":46,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":461,"byte_end":472,"line_start":10,"line_end":10,"column_start":58,"column_end":69,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":58,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":474,"byte_end":479,"line_start":10,"line_end":10,"column_start":71,"column_end":76,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":71,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":481,"byte_end":485,"line_start":10,"line_end":10,"column_start":78,"column_end":82,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":78,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":447,"byte_end":485,"line_start":10,"line_end":10,"column_start":44,"column_end":82,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};","highlight_start":44,"highlight_end":82}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BasicBlock`, `Instruction`, `Type`, and `Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:10:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, ControlFlow};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `DataFlowAnalysis`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":598,"byte_end":614,"line_start":15,"line_end":15,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    DataFlowAnalysis, ","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":591,"byte_end":614,"line_start":14,"line_end":15,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"    CallGraph, ","highlight_start":14,"highlight_end":16},{"text":"    DataFlowAnalysis, ","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `DataFlowAnalysis`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DataFlowAnalysis, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ErrorKind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":731,"byte_end":740,"line_start":20,"line_end":20,"column_start":52,"column_end":61,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompileError, ErrorKind};","highlight_start":52,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/optimization.rs","byte_start":729,"byte_end":740,"line_start":20,"line_end":20,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, CompileError, ErrorKind};","highlight_start":50,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ErrorKind`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/optimization.rs:20:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, CompileError, ErrorKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `TargetEnv`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":642,"byte_end":651,"line_start":10,"line_end":10,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"use crate::backend::target::{TargetOptions, TargetArch, TargetOS, TargetEnv};","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":640,"byte_end":651,"line_start":10,"line_end":10,"column_start":65,"column_end":76,"is_primary":true,"text":[{"text":"use crate::backend::target::{TargetOptions, TargetArch, TargetOS, TargetEnv};","highlight_start":65,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `TargetEnv`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/codegen.rs:10:67\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::backend::target::{TargetOptions, TargetArch, TargetOS, TargetEnv};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Write`, `fs::File`, and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":933,"byte_end":941,"line_start":18,"line_end":18,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    fs::File,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":952,"byte_end":956,"line_start":19,"line_end":19,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    io::{self, Write},","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":958,"byte_end":963,"line_start":19,"line_end":19,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"    io::{self, Write},","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":918,"byte_end":969,"line_start":17,"line_end":21,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::{","highlight_start":1,"highlight_end":11},{"text":"    fs::File,","highlight_start":1,"highlight_end":14},{"text":"    io::{self, Write},","highlight_start":1,"highlight_end":23},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Write`, `fs::File`, and `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/codegen.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fs::File,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    io::{self, Write},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::io`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":71656,"byte_end":71663,"line_start":1777,"line_end":1777,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        use std::io;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/codegen.rs","byte_start":71652,"byte_end":71664,"line_start":1777,"line_end":1777,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        use std::io;","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/codegen.rs:1777:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1777\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use std::io;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BTreeMap` and `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":474,"byte_end":482,"line_start":9,"line_end":9,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque, BTreeMap};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":484,"byte_end":492,"line_start":9,"line_end":9,"column_start":52,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque, BTreeMap};","highlight_start":52,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":472,"byte_end":492,"line_start":9,"line_end":9,"column_start":40,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, VecDeque, BTreeMap};","highlight_start":40,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BTreeMap` and `VecDeque`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/analysis.rs:9:42\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, VecDeque, BTreeMap};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::rc::Rc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":499,"byte_end":510,"line_start":10,"line_end":10,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":495,"byte_end":512,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":17},{"text":"use std::cell::RefCell;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::rc::Rc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/analysis.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::rc::Rc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::cell::RefCell`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":516,"byte_end":534,"line_start":11,"line_end":11,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::cell::RefCell;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/analysis.rs","byte_start":512,"byte_end":536,"line_start":11,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::cell::RefCell;","highlight_start":1,"highlight_end":24},{"text":"use std::time::{Duration, Instant};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::cell::RefCell`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/analysis.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::cell::RefCell;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Instruction` and `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":413,"byte_end":424,"line_start":10,"line_end":10,"column_start":58,"column_end":69,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};","highlight_start":58,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":426,"byte_end":431,"line_start":10,"line_end":10,"column_start":71,"column_end":76,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};","highlight_start":71,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/backend/vectorization.rs","byte_start":411,"byte_end":431,"line_start":10,"line_end":10,"column_start":56,"column_end":76,"is_primary":true,"text":[{"text":"use crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};","highlight_start":56,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Instruction` and `Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/backend/vectorization.rs:10:58\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::{Module, Function, BasicBlock, Instruction, Value, Type, Loop};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fs`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":462,"byte_end":469,"line_start":9,"line_end":9,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use std::fs;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":458,"byte_end":471,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fs;","highlight_start":1,"highlight_end":13},{"text":"use std::collections::{HashMap, HashSet, VecDeque};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Write` and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":610,"byte_end":614,"line_start":13,"line_end":13,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":616,"byte_end":621,"line_start":13,"line_end":13,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":596,"byte_end":624,"line_start":13,"line_end":14,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":1,"highlight_end":28},{"text":"use rayon::prelude::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Write` and `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:13:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `NodeId`, `Program`, and `SourceLocation`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":895,"byte_end":902,"line_start":24,"line_end":24,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"    ast::{Program, Node, NodeId, NodeKind},","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":910,"byte_end":916,"line_start":24,"line_end":24,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    ast::{Program, Node, NodeId, NodeKind},","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":975,"byte_end":989,"line_start":25,"line_end":25,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":895,"byte_end":904,"line_start":24,"line_end":24,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"    ast::{Program, Node, NodeId, NodeKind},","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":908,"byte_end":916,"line_start":24,"line_end":24,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"    ast::{Program, Node, NodeId, NodeKind},","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":973,"byte_end":989,"line_start":25,"line_end":25,"column_start":45,"column_end":61,"is_primary":true,"text":[{"text":"    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},","highlight_start":45,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `NodeId`, `Program`, and `SourceLocation`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:24:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ast::{Program, Node, NodeId, NodeKind},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    error::{CompilerError, ErrorKind, Result, SourceLocation, DiagnosticReporter, Severity},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Target`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1735,"byte_end":1741,"line_start":46,"line_end":46,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    self, Target, Backend, CodegenOptions, TargetFeature, ","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":1733,"byte_end":1741,"line_start":46,"line_end":46,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    self, Target, Backend, CodegenOptions, TargetFeature, ","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Target`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:46:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self, Target, Backend, CodegenOptions, TargetFeature, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CacheEntry`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2219,"byte_end":2229,"line_start":58,"line_end":58,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/compiler.rs","byte_start":2217,"byte_end":2229,"line_start":58,"line_end":58,"column_start":29,"column_end":41,"is_primary":true,"text":[{"text":"    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},","highlight_start":29,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `CacheEntry`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/compiler.rs:58:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cache::{CompilationCache, CacheEntry, CacheMetadata, CacheStrategy},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `PathBuf`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":887,"byte_end":894,"line_start":23,"line_end":23,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":885,"byte_end":894,"line_start":23,"line_end":23,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":880,"byte_end":881,"line_start":23,"line_end":23,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":894,"byte_end":895,"line_start":23,"line_end":23,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"use std::path::{Path, PathBuf};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `PathBuf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:23:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::{Path, PathBuf};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ErrorKind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1029,"byte_end":1038,"line_start":27,"line_end":27,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result};","highlight_start":45,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1027,"byte_end":1038,"line_start":27,"line_end":27,"column_start":43,"column_end":54,"is_primary":true,"text":[{"text":"use crate::frontend::error::{CompilerError, ErrorKind, Result};","highlight_start":43,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ErrorKind`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:27:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{CompilerError, ErrorKind, Result};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::middleend::ir::Module`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1094,"byte_end":1122,"line_start":29,"line_end":29,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use crate::middleend::ir::Module;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/driver/mod.rs","byte_start":1090,"byte_end":1124,"line_start":29,"line_end":30,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::middleend::ir::Module;","highlight_start":1,"highlight_end":34},{"text":"use crate::backend::target::TargetMachine;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::middleend::ir::Module`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/driver/mod.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::middleend::ir::Module;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15530,"byte_end":15538,"line_start":551,"line_end":551,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use std::fmt;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15526,"byte_end":15539,"line_start":551,"line_end":551,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use std::fmt;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/utils.rs:551:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m551\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::fmt;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15560,"byte_end":15564,"line_start":552,"line_end":552,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"    use std::path::{Path, PathBuf};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15560,"byte_end":15566,"line_start":552,"line_end":552,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"    use std::path::{Path, PathBuf};","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15559,"byte_end":15560,"line_start":552,"line_end":552,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    use std::path::{Path, PathBuf};","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15573,"byte_end":15574,"line_start":552,"line_end":552,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    use std::path::{Path, PathBuf};","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Path`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/utils.rs:552:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m552\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::path::{Path, PathBuf};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15584,"byte_end":15609,"line_start":553,"line_end":553,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"    use std::collections::HashMap;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15580,"byte_end":15610,"line_start":553,"line_end":553,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"    use std::collections::HashMap;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/utils.rs:553:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m553\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::collections::HashMap;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Duration` and `Instant`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15631,"byte_end":15639,"line_start":554,"line_end":554,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"    use std::time::{Duration, Instant};","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15641,"byte_end":15648,"line_start":554,"line_end":554,"column_start":31,"column_end":38,"is_primary":true,"text":[{"text":"    use std::time::{Duration, Instant};","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/utils.rs","byte_start":15615,"byte_end":15650,"line_start":554,"line_end":554,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"    use std::time::{Duration, Instant};","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Duration` and `Instant`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/utils.rs:554:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::time::{Duration, Instant};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::io`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/diagnostics.rs","byte_start":167,"byte_end":174,"line_start":5,"line_end":5,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use std::io;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/diagnostics.rs","byte_start":163,"byte_end":176,"line_start":5,"line_end":6,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::io;","highlight_start":1,"highlight_end":13},{"text":"use std::fmt;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/diagnostics.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/diagnostics.rs","byte_start":194,"byte_end":219,"line_start":7,"line_end":7,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/diagnostics.rs","byte_start":190,"byte_end":221,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/diagnostics.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BTreeSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":799,"byte_end":807,"line_start":25,"line_end":25,"column_start":52,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":52,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":797,"byte_end":807,"line_start":25,"line_end":25,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":50,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BTreeSet`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:25:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":828,"byte_end":842,"line_start":27,"line_end":27,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":824,"byte_end":844,"line_start":27,"line_end":28,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use thiserror::Error;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:27:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::rc::Rc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":870,"byte_end":881,"line_start":29,"line_end":29,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":866,"byte_end":883,"line_start":29,"line_end":30,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":17},{"text":"use std::cell::{RefCell, Cell};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::rc::Rc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::rc::Rc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Cell` and `RefCell`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":899,"byte_end":906,"line_start":30,"line_end":30,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"use std::cell::{RefCell, Cell};","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":908,"byte_end":912,"line_start":30,"line_end":30,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"use std::cell::{RefCell, Cell};","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":883,"byte_end":915,"line_start":30,"line_end":31,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::cell::{RefCell, Cell};","highlight_start":1,"highlight_end":32},{"text":"use std::any::TypeId as StdTypeId;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Cell` and `RefCell`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:30:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::cell::{RefCell, Cell};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::any::TypeId as StdTypeId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":919,"byte_end":948,"line_start":31,"line_end":31,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"use std::any::TypeId as StdTypeId;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":915,"byte_end":950,"line_start":31,"line_end":32,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::any::TypeId as StdTypeId;","highlight_start":1,"highlight_end":35},{"text":"use std::marker::PhantomData;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::any::TypeId as StdTypeId`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::any::TypeId as StdTypeId;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::marker::PhantomData`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":954,"byte_end":978,"line_start":32,"line_end":32,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":950,"byte_end":980,"line_start":32,"line_end":33,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":1,"highlight_end":30},{"text":"use std::ops::{Deref, DerefMut};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::marker::PhantomData`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:32:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::marker::PhantomData;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `DerefMut` and `Deref`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":995,"byte_end":1000,"line_start":33,"line_end":33,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"use std::ops::{Deref, DerefMut};","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1002,"byte_end":1010,"line_start":33,"line_end":33,"column_start":23,"column_end":31,"is_primary":true,"text":[{"text":"use std::ops::{Deref, DerefMut};","highlight_start":23,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":980,"byte_end":1013,"line_start":33,"line_end":34,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::ops::{Deref, DerefMut};","highlight_start":1,"highlight_end":33},{"text":"use std::time::Duration;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `DerefMut` and `Deref`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:33:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ops::{Deref, DerefMut};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::time::Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1017,"byte_end":1036,"line_start":34,"line_end":34,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::time::Duration;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1013,"byte_end":1038,"line_start":34,"line_end":35,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::time::Duration;","highlight_start":1,"highlight_end":25},{"text":"use std::hash::{Hash, Hasher};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::time::Duration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:34:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::Duration;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::frontend::ast`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1074,"byte_end":1094,"line_start":37,"line_end":37,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use crate::frontend::ast;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1070,"byte_end":1096,"line_start":37,"line_end":38,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::frontend::ast;","highlight_start":1,"highlight_end":26},{"text":"use crate::frontend::error::{Result, ErrorKind};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::frontend::ast`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:37:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::ast;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"private item shadows public glob re-export","code":{"code":"hidden_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1125,"byte_end":1131,"line_start":38,"line_end":38,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, ErrorKind};","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the name `Result` in the type namespace is supposed to be publicly re-exported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"but the private item here shadows it","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1125,"byte_end":1131,"line_start":38,"line_end":38,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, ErrorKind};","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`#[warn(hidden_glob_reexports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: private item shadows public glob re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:38:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, ErrorKind};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the name `Result` in the type namespace is supposed to be publicly re-exported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: but the private item here shadows it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:38:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, ErrorKind};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(hidden_glob_reexports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"private item shadows public glob re-export","code":{"code":"hidden_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1133,"byte_end":1142,"line_start":38,"line_end":38,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, ErrorKind};","highlight_start":38,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the name `ErrorKind` in the type namespace is supposed to be publicly re-exported here","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"but the private item here shadows it","code":null,"level":"note","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1133,"byte_end":1142,"line_start":38,"line_end":38,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"use crate::frontend::error::{Result, ErrorKind};","highlight_start":38,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: private item shadows public glob re-export\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:38:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, ErrorKind};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the name `ErrorKind` in the type namespace is supposed to be publicly re-exported here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1029:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: but the private item here shadows it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:38:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::error::{Result, ErrorKind};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `HashSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":846,"byte_end":853,"line_start":23,"line_end":23,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":844,"byte_end":853,"line_start":23,"line_end":23,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":31,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":836,"byte_end":837,"line_start":23,"line_end":23,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":853,"byte_end":854,"line_start":23,"line_end":23,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet};","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `HashSet`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/types.rs:23:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::Symbol`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":1357,"byte_end":1370,"line_start":33,"line_end":33,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use super::Symbol;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":1353,"byte_end":1372,"line_start":33,"line_end":34,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::Symbol;","highlight_start":1,"highlight_end":19},{"text":"use super::SourceSpan;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::Symbol`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/types.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::Symbol;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `super::RegionId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":1399,"byte_end":1414,"line_start":35,"line_end":35,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use super::RegionId;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/types.rs","byte_start":1395,"byte_end":1416,"line_start":35,"line_end":36,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use super::RegionId;","highlight_start":1,"highlight_end":21},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::RegionId`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/types.rs:35:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::RegionId;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BTreeMap`, `BTreeSet`, and `HashSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":659,"byte_end":666,"line_start":19,"line_end":19,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":668,"byte_end":676,"line_start":19,"line_end":19,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":678,"byte_end":686,"line_start":19,"line_end":19,"column_start":52,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":52,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":657,"byte_end":686,"line_start":19,"line_end":19,"column_start":31,"column_end":60,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":31,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":649,"byte_end":650,"line_start":19,"line_end":19,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":686,"byte_end":687,"line_start":19,"line_end":19,"column_start":60,"column_end":61,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};","highlight_start":60,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BTreeMap`, `BTreeSet`, and `HashSet`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/traits.rs:19:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, HashSet, BTreeMap, BTreeSet};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":693,"byte_end":701,"line_start":20,"line_end":20,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":689,"byte_end":703,"line_start":20,"line_end":21,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14},{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/traits.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::rc::Rc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":751,"byte_end":762,"line_start":23,"line_end":23,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":747,"byte_end":764,"line_start":23,"line_end":24,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::rc::Rc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/traits.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::rc::Rc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `TypeError` and `Type`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":829,"byte_end":833,"line_start":26,"line_end":26,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"use super::{Type, TypeId, TypeError, TraitBound, TypeRegistry};","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":843,"byte_end":852,"line_start":26,"line_end":26,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"use super::{Type, TypeId, TypeError, TraitBound, TypeRegistry};","highlight_start":27,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":829,"byte_end":835,"line_start":26,"line_end":26,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"use super::{Type, TypeId, TypeError, TraitBound, TypeRegistry};","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":841,"byte_end":852,"line_start":26,"line_end":26,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"use super::{Type, TypeId, TypeError, TraitBound, TypeRegistry};","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `TypeError` and `Type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/traits.rs:26:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::{Type, TypeId, TypeError, TraitBound, TypeRegistry};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `TypeFlags`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":951,"byte_end":960,"line_start":27,"line_end":27,"column_start":71,"column_end":80,"is_primary":true,"text":[{"text":"use super::types::{TypeDefinition, MethodSignature, MethodDefinition, TypeFlags, Visibility};","highlight_start":71,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/traits.rs","byte_start":949,"byte_end":960,"line_start":27,"line_end":27,"column_start":69,"column_end":80,"is_primary":true,"text":[{"text":"use super::types::{TypeDefinition, MethodSignature, MethodDefinition, TypeFlags, Visibility};","highlight_start":69,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `TypeFlags`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/traits.rs:27:71\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::types::{TypeDefinition, MethodSignature, MethodDefinition, TypeFlags, Visibility};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Type`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1317,"byte_end":1321,"line_start":46,"line_end":46,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"pub use self::types::{Type, TypeId, TypeRegistry};","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":1317,"byte_end":1323,"line_start":46,"line_end":46,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"pub use self::types::{Type, TypeId, TypeRegistry};","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:46:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::{Type, TypeId, TypeRegistry};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27399,"byte_end":27413,"line_start":1028,"line_end":1028,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"pub use self::types::*;","highlight_start":9,"highlight_end":23}],"label":"the name `SourceLocation` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/swiftlight-compiler/src/typesystem/mod.rs","byte_start":27423,"byte_end":27438,"line_start":1029,"line_end":1029,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"pub use self::traits::*;","highlight_start":9,"highlight_end":24}],"label":"but the name `SourceLocation` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(ambiguous_glob_reexports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/typesystem/mod.rs:1028:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::types::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `SourceLocation` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use self::traits::*;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `SourceLocation` in the type namespace is also re-exported here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(ambiguous_glob_reexports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::frontend::semantic::type_checker::TypeChecker`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":2229,"byte_end":2281,"line_start":62,"line_end":62,"column_start":5,"column_end":57,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::type_checker::TypeChecker;","highlight_start":5,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":2225,"byte_end":2283,"line_start":62,"line_end":63,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::frontend::semantic::type_checker::TypeChecker;","highlight_start":1,"highlight_end":58},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::frontend::semantic::type_checker::TypeChecker`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:62:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::frontend::semantic::type_checker::TypeChecker;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `name_resolver::NameResolver`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":11478,"byte_end":11505,"line_start":345,"line_end":345,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"        name_resolver::NameResolver,","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":11478,"byte_end":11515,"line_start":345,"line_end":346,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        name_resolver::NameResolver,","highlight_start":9,"highlight_end":37},{"text":"        type_checker::TypeChecker,","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":11468,"byte_end":11478,"line_start":344,"line_end":345,"column_start":36,"column_end":9,"is_primary":true,"text":[{"text":"    use crate::frontend::semantic::{","highlight_start":36,"highlight_end":37},{"text":"        name_resolver::NameResolver,","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/swiftlight-compiler/src/lib.rs","byte_start":11540,"byte_end":11547,"line_start":346,"line_end":347,"column_start":34,"column_end":6,"is_primary":true,"text":[{"text":"        type_checker::TypeChecker,","highlight_start":34,"highlight_end":35},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `name_resolver::NameResolver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/swiftlight-compiler/src/lib.rs:345:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        name_resolver::NameResolver,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 185 previous errors; 149 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 185 previous errors; 149 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0106, E0252, E0255, E0261, E0401, E0428, E0432, E0433, E0584...","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0106, E0252, E0255, E0261, E0401, E0428, E0432, E0433, E0584...\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0106`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0106`.\u001b[0m\n"}
